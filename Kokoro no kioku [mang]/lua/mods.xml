<Mods LoadCommand = "%xero(function(self)
	function RealFov(fov)
        return 360 / math.pi * math.atan(math.tan(math.pi * fov / 360) * DISPLAY:GetDisplayWidth() / DISPLAY:GetDisplayHeight() * 0.75)
    end
	-- judgment / combo proxies
	for pn = 1, 2 do
		setupJudgeProxy(PJ[pn], P[pn]:GetChild('Judgment'), pn)
		setupJudgeProxy(PC[pn], P[pn]:GetChild('Combo'), pn)
	end
	-- player proxies
	for pn = 1, #PP do
		PP[pn]:SetTarget(P[pn])
		P[pn]:hidden(1)
		P[pn]:SetFarDist(100000)
		P[pn]:fov(RealFov(90))
	end
	GAMESTATE:ForceSmoothLines(0)
	-- your code goes here here:

----------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
---------------------------      NOTE DATA TABLES (COLLAPSE)      ----------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
bighits = {
	{345.000,0,1},
	{347.000,0,1},
	{349.000,0,1},
	{351.000,0,1},
	{353.000,0,1},
	{355.000,0,1},
	{357.000,0,1},
	{359.000,0,1},
	{361.000,0,1},
	{363.000,0,1},
	{364.500,0,1},
	{366.000,0,1},
	{367.000,0,1},
	{369.000,0,1},
	{371.000,0,1},
	{372.000,0,1},
	{373.000,0,1},
	{375.000,0,1},
	{375.500,0,1},
	{376.000,0,1},
	{377.000,0,1},
	{379.000,0,1},
	{381.000,0,1},
	{382.500,0,1},
	{383.000,0,1},
	{383.500,0,1},
	{385.000,0,1},
	{387.000,0,1},
	{389.000,0,1},
	{391.000,0,1},
	{393.000,0,1},
	{395.000,0,1},
	{396.500,0,1},
	{398.000,0,1},
	{399.000,0,1},
	{401.000,0,1},
	{403.000,0,1},
}
longhits = {
	{346.000,0,2,length=1.000},
	{347.000,1,2,length=4.000},
	{351.000,0,2,length=2.000},
	{362.000,0,2,length=1.000},
	{363.000,1,2,length=1.500},
	{364.500,0,2,length=1.500},
	{366.000,1,2,length=1.000},
	{367.000,0,2,length=1.000},
	{368.000,1,2,length=1.000},
	{378.000,0,2,length=0.500},
	{378.500,1,2,length=0.500},
	{379.000,0,2,length=2.000},
	{381.000,1,2,length=1.000},
	{382.000,0,2,length=0.500},
	{382.500,1,2,length=0.500},
	{383.000,0,2,length=0.500},
	{383.500,1,2,length=1.500},
	{394.000,0,2,length=1.000},
	{395.000,1,2,length=1.500},
	{396.500,0,2,length=1.500},
	{398.000,1,2,length=1.000},
	{399.000,0,2,length=1.000},
	{400.000,1,2,length=1.000},
}
beepp = {
	{1.000,0,1},
	{2.500,0,1},
	{3.000,0,1},
	{3.750,0,1},
	{4.500,0,1},
	{5.000,0,1},
	{5.750,0,1},
	{6.500,0,1},
	{7.000,0,1},
	{8.000,0,1},
	{8.333,0,1},
	{8.750,0,1},
	{9.000,0,1},
	{9.750,0,1},
	{10.500,0,1},
	{11.250,0,1},
	{12.000,0,1},
	{12.500,0,1},
	{13.000,0,1},
	{14.000,0,1},
	{14.333,0,1},
	{14.667,0,1},
	{15.000,0,1},
	{15.500,0,1},
	{15.750,0,1},
	{16.500,0,1},
	{17.000,0,1},
	{18.500,0,1},
	{19.000,0,1},
	{19.750,0,1},
	{20.500,0,1},
	{21.000,0,1},
	{21.750,0,1},
	{22.500,0,1},
	{23.000,0,1},
	{23.750,0,1},
	{24.500,0,1},
	{25.000,0,1},
	{25.750,0,1},
	{26.500,0,1},
	{27.000,0,1},
	{27.750,0,1},
	{28.500,0,1},
	{29.000,0,1},
	{29.750,0,1},
	{30.500,0,1},
	{31.000,0,1},
	{31.333,0,1},
	{31.667,0,1},
	{32.000,0,1},
	{33.000,0,1},
	{34.500,0,1},
	{35.000,0,1},
	{35.750,0,1},
	{36.500,0,1},
	{37.000,0,1},
	{37.750,0,1},
	{38.500,0,1},
	{39.000,0,1},
	{40.000,0,1},
	{40.333,0,1},
	{40.750,0,1},
	{41.000,0,1},
	{41.750,0,1},
	{42.500,0,1},
	{43.250,0,1},
	{44.000,0,1},
	{44.500,0,1},
	{45.000,0,1},
	{46.000,0,1},
	{46.333,0,1},
	{46.667,0,1},
	{47.000,0,1},
	{47.500,0,1},
	{47.750,0,1},
	{48.500,0,1},
	{49.000,0,1},
	{50.500,0,1},
	{51.000,0,1},
	{51.750,0,1},
	{52.500,0,1},
	{53.000,0,1},
	{53.750,0,1},
	{54.500,0,1},
	{55.000,0,1},
	{55.750,0,1},
	{56.500,0,1},
	{57.000,0,1},
	{57.750,0,1},
	{58.500,0,1},
	{59.000,0,1},
	{59.750,0,1},
	{60.500,0,1},
	{61.000,0,1},
	{61.750,0,1},
	{62.500,0,1},
	{63.000,0,1},
}
percussion1 = {
	{33.000,0,1},
	{34.500,0,1},
	{35.000,3,1},
	{36.000,0,1},
	{37.000,0,1},
	{38.500,0,1},
	{39.000,3,1},
	{40.000,0,1},
	{41.000,0,1},
	{42.000,2,1},
	{42.500,0,1},
	{43.000,3,1},
	{44.000,0,1},
	{46.000,0,1},
	{47.000,3,1},
	{48.000,0,1},
	{48.500,0,1},
	{48.500,2,1},
	{49.000,0,1},
	{50.500,0,1},
	{51.000,3,1},
	{52.000,0,1},
	{53.000,0,1},
	{54.500,0,1},
	{55.000,3,1},
	{56.000,0,1},
	{57.000,0,1},
	{58.000,2,1},
	{58.500,0,1},
	{59.000,3,1},
	{60.000,0,1},
	{61.000,0,1},
	{64.000,0,1},
	{64.500,0,1},
	{65.000,0,1},
}
persussion = {
	{196.000,0,1},
	{196.500,0,1},
	{197.000,0,1},
	{197.750,1,1},
	{198.000,0,1},
	{198.500,1,1},
	{199.000,0,1},
	{199.750,1,1},
	{200.000,0,1},
	{200.500,1,1},
	{201.000,0,1},
	{201.750,1,1},
	{202.000,0,1},
	{202.500,1,1},
	{203.000,0,1},
	{203.500,1,1},
	{203.750,1,1},
	{204.000,0,1},
	{204.500,1,1},
	{205.000,3,1},
	{205.500,0,1},
	{205.750,0,1},
	{206.250,0,1},
	{206.500,0,1},
	{207.000,3,1},
	{207.500,0,1},
	{207.750,0,1},
	{208.250,0,1},
	{208.500,0,1},
	{209.000,0,1},
	{213.000,0,1},
	{214.000,0,1},
	{214.500,1,1},
	{215.000,3,1},
	{216.000,0,1},
	{217.000,0,1},
	{218.000,0,1},
	{218.500,1,1},
	{219.000,3,1},
	{221.000,0,1},
	{222.000,0,1},
	{222.500,1,1},
	{223.000,3,1},
	{224.000,0,1},
	{225.000,0,1},
	{226.000,0,1},
	{226.500,1,1},
	{227.000,3,1},
	{229.000,0,1},
	{230.500,1,1},
	{231.000,3,1},
	{233.000,0,1},
	{234.500,1,1},
	{235.000,3,1},
	{236.000,0,1},
	{237.000,0,1},
	{238.500,1,1},
	{239.000,3,1},
	{241.000,0,1},
	{243.000,3,1},
}
tick = {
	{65.000,0,1},
	{65.500,0,1},
	{66.000,0,1},
	{66.500,0,1},
	{67.000,0,1},
	{67.500,0,1},
	{68.000,0,1},
	{68.500,0,1},
	{69.000,0,1},
	{69.000,3,1},
	{69.500,0,1},
	{69.500,3,1},
	{70.000,0,1},
	{70.000,3,1},
	{70.500,0,1},
	{70.500,3,1},
	{71.000,0,1},
	{71.000,2,1},
	{71.500,0,1},
	{71.500,2,1},
	{72.000,0,1},
	{72.000,2,1},
	{72.500,0,1},
	{72.500,2,1},
	{73.000,1,1},
	{73.500,1,1},
	{74.000,1,1},
	{74.500,1,1},
	{75.000,1,1},
	{75.500,1,1},
	{76.000,1,1},
	{76.500,1,1},
	{77.000,1,1},
	{77.000,3,1},
	{77.500,1,1},
	{77.500,3,1},
	{78.000,1,1},
	{78.000,3,1},
	{78.500,1,1},
	{78.500,3,1},
	{79.000,1,1},
	{79.000,2,1},
	{79.500,1,1},
	{79.500,2,1},
	{80.000,1,1},
	{80.000,2,1},
	{80.500,1,1},
	{80.500,2,1},
	{81.000,0,1},
	{81.500,0,1},
	{82.000,0,1},
	{82.500,0,1},
	{83.000,0,1},
	{83.500,0,1},
	{84.000,0,1},
	{84.500,0,1},
	{85.000,0,1},
	{85.000,3,1},
	{85.500,0,1},
	{85.500,3,1},
	{86.000,0,1},
	{86.000,3,1},
	{86.500,0,1},
	{86.500,3,1},
	{87.000,0,1},
	{87.000,2,1},
	{87.500,0,1},
	{87.500,2,1},
	{88.000,0,1},
	{88.000,2,1},
	{88.500,0,1},
	{88.500,2,1},
	{89.000,1,1},
	{89.500,1,1},
	{90.000,1,1},
	{90.500,1,1},
	{91.000,1,1},
	{91.500,1,1},
	{92.000,1,1},
	{92.500,1,1},
	{93.000,1,1},
	{93.000,3,1},
	{93.500,1,1},
	{93.500,3,1},
	{94.000,1,1},
	{94.000,3,1},
	{94.500,1,1},
	{94.500,3,1},
	{95.000,1,1},
	{95.000,2,1},
	{95.500,1,1},
	{95.500,2,1},
	{96.000,1,1},
	{96.000,2,1},
	{96.500,1,1},
	{96.500,2,1},
}
hitsmygive = {
	{97.000,0,1},
	{97.000,3,1},
	{97.250,3,1},
	{97.750,3,1},
	{98.000,0,1},
	{98.000,3,1},
	{98.500,3,1},
	{98.750,3,1},
	{99.000,0,1},
	{99.000,3,1},
	{99.250,3,1},
	{99.750,3,1},
	{100.000,0,1},
	{100.000,3,1},
	{100.250,3,1},
	{100.500,3,1},
	{101.000,0,1},
	{101.000,3,1},
	{101.250,3,1},
	{101.500,3,1},
	{101.750,3,1},
	{102.000,0,1},
	{102.000,3,1},
	{102.500,3,1},
	{103.000,0,1},
	{103.000,3,1},
	{103.250,3,1},
	{103.750,3,1},
	{104.000,0,1},
	{104.000,3,1},
	{104.500,3,1},
	{105.000,0,1},
	{105.000,3,1},
	{105.250,3,1},
	{105.500,0,1},
	{105.500,3,1},
	{105.750,3,1},
	{106.000,0,1},
	{106.000,3,1},
	{106.250,3,1},
	{106.500,0,1},
	{106.500,3,1},
	{106.750,3,1},
	{107.000,0,1},
	{107.000,3,1},
	{107.250,3,1},
	{107.500,0,1},
	{107.500,3,1},
	{107.750,3,1},
	{108.000,0,1},
	{108.000,3,1},
	{108.250,3,1},
	{108.500,0,1},
	{108.500,3,1},
	{108.750,3,1},
	{109.000,0,1},
	{109.000,3,1},
	{109.667,0,1},
	{110.333,0,1},
	{111.000,0,1},
	{111.667,0,1},
	{112.333,0,1},
}
give_2 = {
	{97.000,3,1},
	{97.250,3,1},
	{97.750,3,1},
	{98.000,3,1},
	{98.500,3,1},
	{98.750,3,1},
	{99.000,3,1},
	{99.250,3,1},
	{99.750,3,1},
	{100.000,3,1},
	{100.250,3,1},
	{100.500,3,1},
	{101.000,3,1},
	{101.250,3,1},
	{101.750,3,1},
	{102.000,3,1},
	{102.500,3,1},
	{103.000,3,1},
	{103.250,3,1},
	{103.750,3,1},
	{104.000,3,1},
	{104.500,3,1},
	{105.000,3,1},
	{105.250,3,1},
	{105.500,3,1},
	{105.750,3,1},
	{106.000,3,1},
	{106.500,3,1},
	{107.000,3,1},
	{107.250,3,1},
	{107.500,3,1},
	{107.750,3,1},
	{108.000,3,1},
	{108.500,3,1},
	{108.750,3,1},
	{109.000,3,1},
}
flour = {
	{116.000,2,1},
	{117.000,0,1},
	{117.000,3,1},
	{117.500,3,1},
	{117.750,2,1},
	{118.000,0,1},
	{118.500,3,1},
	{119.000,0,1},
	{119.000,3,1},
	{119.750,2,1},
	{119.750,3,1},
	{120.000,0,1},
	{120.500,3,1},
	{121.000,0,1},
	{121.000,3,1},
	{121.500,3,1},
	{121.750,2,1},
	{122.000,0,1},
	{122.500,3,1},
	{123.000,0,1},
	{123.000,3,1},
	{123.750,2,1},
	{123.750,3,1},
	{124.000,0,1},
	{124.500,3,1},
	{125.000,0,1},
	{125.000,3,1},
	{125.500,3,1},
	{125.750,2,1},
	{126.000,0,1},
	{126.500,3,1},
	{127.000,0,1},
	{127.000,3,1},
	{127.750,2,1},
	{127.750,3,1},
	{128.000,0,1},
	{128.500,3,1},
	{129.000,0,1},
	{129.000,3,1},
	{129.500,3,1},
	{129.750,2,1},
	{130.000,0,1},
	{130.500,3,1},
	{131.000,0,1},
	{131.000,3,1},
	{131.750,2,1},
	{131.750,3,1},
	{132.000,0,1},
	{132.500,3,1},
	{133.000,0,1},
	{133.000,3,1},
	{133.500,3,1},
	{133.750,2,1},
	{134.000,0,1},
	{134.500,3,1},
	{135.000,0,1},
	{135.000,3,1},
	{135.750,2,1},
	{135.750,3,1},
	{136.000,0,1},
	{136.500,3,1},
	{137.000,0,1},
	{137.000,3,1},
	{137.500,3,1},
	{137.750,2,1},
	{138.000,0,1},
	{138.500,3,1},
	{139.000,0,1},
	{139.000,3,1},
	{139.750,2,1},
	{139.750,3,1},
	{140.000,0,1},
	{140.500,3,1},
	{141.000,0,1},
	{141.000,3,1},
	{141.500,3,1},
	{142.000,3,1},
	{142.500,0,1},
	{142.500,3,1},
	{143.000,0,1},
	{143.000,3,1},
	{143.500,3,1},
	{144.000,3,1},
	{144.500,3,1},
	{145.000,0,1},
	{145.000,3,1},
	{145.500,3,1},
	{145.750,0,1},
	{146.000,3,1},
	{146.500,0,1},
	{146.500,3,1},
	{147.000,0,1},
	{147.000,3,1},
	{147.500,0,1},
	{147.500,3,1},
	{148.000,3,1},
	{148.500,0,1},
	{148.500,3,1},
	{149.000,0,1},
	{149.000,3,1},
	{149.500,3,1},
	{149.750,2,1},
	{150.000,0,1},
	{150.500,3,1},
	{151.000,0,1},
	{151.000,3,1},
	{151.750,2,1},
	{151.750,3,1},
	{152.000,0,1},
	{152.500,3,1},
	{153.000,0,1},
	{153.000,3,1},
	{153.500,3,1},
	{153.750,2,1},
	{154.000,0,1},
	{154.500,3,1},
	{155.000,0,1},
	{155.000,3,1},
	{155.750,2,1},
	{155.750,3,1},
	{156.000,0,1},
	{156.500,3,1},
	{157.000,0,1},
	{157.000,3,1},
	{157.500,3,1},
	{157.750,2,1},
	{158.000,0,1},
	{158.500,3,1},
	{159.000,0,1},
	{159.000,3,1},
	{159.750,2,1},
	{159.750,3,1},
	{160.000,0,1},
	{160.500,3,1},
	{161.000,0,1},
	{161.000,3,1},
	{161.500,3,1},
	{161.750,2,1},
	{162.000,0,1},
	{162.500,3,1},
	{163.000,0,1},
	{163.000,3,1},
	{163.750,2,1},
	{163.750,3,1},
	{164.000,0,1},
	{164.500,3,1},
	{165.000,0,1},
	{165.000,3,1},
	{165.500,3,1},
	{165.750,2,1},
	{166.000,0,1},
	{166.500,3,1},
	{167.000,0,1},
	{167.000,3,1},
	{167.750,2,1},
	{167.750,3,1},
	{168.000,0,1},
	{168.500,3,1},
	{169.000,0,1},
	{169.000,3,1},
	{169.500,3,1},
	{169.750,2,1},
	{170.000,0,1},
	{170.500,3,1},
	{171.000,0,1},
	{171.000,3,1},
	{171.750,3,1},
	{172.000,0,1},
	{172.500,3,1},
	{173.000,0,1},
	{173.000,3,1},
	{173.500,3,1},
	{174.000,3,1},
	{174.500,3,1},
	{175.000,3,1},
	{175.500,3,1},
	{176.000,3,1},
	{176.500,3,1},
	{177.000,3,1},
	{177.500,3,1},
	{178.000,3,1},
	{178.500,3,1},
	{179.000,3,1},
	{179.500,3,1},
	{180.000,3,1},
}
heyhey = {
	{149.750,2,1},
	{150.500,2,1},
	{151.750,2,1},
	{152.500,2,1},
	{153.750,2,1},
	{154.500,2,1},
	{155.750,2,1},
	{156.500,2,1},
	{157.750,2,1},
	{158.500,2,1},
	{159.750,2,1},
	{160.500,2,1},
	{161.750,2,1},
	{162.500,2,1},
	{163.750,2,1},
	{164.500,2,1},
	{165.750,2,1},
	{166.500,2,1},
	{167.750,2,1},
	{168.500,2,1},
	{169.750,2,1},
	{170.500,2,1},
	{171.750,2,1},
	{172.500,2,1},
}
psy = {
	{181.000,0,1},
	{181.250,0,1},
	{181.500,0,1},
	{182.000,0,1},
	{182.250,0,1},
	{182.750,0,1},
	{183.000,0,1},
	{183.250,0,1},
	{183.500,0,1},
	{184.000,0,1},
	{184.250,0,1},
	{184.500,0,1},
	{184.750,0,1},
	{185.000,0,1},
	{185.500,0,1},
	{186.000,0,1},
	{186.250,0,1},
	{186.750,0,1},
	{187.000,0,1},
	{187.250,0,1},
	{187.500,0,1},
	{188.000,0,1},
	{188.250,0,1},
	{188.500,0,1},
	{188.750,0,1},
	{189.000,0,1},
	{189.500,0,1},
	{190.000,0,1},
	{190.250,0,1},
	{190.750,0,1},
	{191.000,0,1},
	{191.250,0,1},
	{191.500,0,1},
	{192.000,0,1},
	{192.250,0,1},
	{192.500,0,1},
	{192.750,0,1},
	{193.000,0,1},
	{193.500,0,1},
	{194.000,0,1},
	{194.250,0,1},
	{194.750,0,1},
	{195.000,0,1},
	{195.250,0,1},
	{195.500,0,1},
	{196.000,0,1},
	{196.500,0,1},
	{196.750,0,1},
	{197.000,0,1},
	{197.500,0,1},
	{197.750,0,1},
	{198.000,0,1},
	{198.500,0,1},
	{199.000,0,1},
	{199.250,0,1},
	{199.500,0,1},
	{200.000,0,1},
	{200.500,0,1},
	{200.750,0,1},
	{201.000,0,1},
	{201.500,0,1},
	{202.000,0,1},
	{202.500,0,1},
	{202.750,0,1},
	{203.000,0,1},
	{203.500,0,1},
	{203.750,0,1},
	{204.000,0,1},
	{204.500,0,1},
	{205.000,0,1},
	{205.500,0,1},
	{205.750,0,1},
	{206.250,0,1},
	{206.500,0,1},
	{207.000,0,1},
	{207.500,0,1},
	{207.750,0,1},
	{208.250,0,1},
	{208.500,0,1},
	{215.000,0,1},
	{215.500,0,1},
	{216.000,0,1},
	{216.500,0,1},
	{216.750,0,1},
	{217.000,0,1},
	{217.500,0,1},
	{218.250,0,1},
	{223.000,0,1},
	{223.500,0,1},
	{224.000,0,1},
	{224.250,0,1},
	{224.500,0,1},
	{224.750,0,1},
	{225.000,0,1},
	{225.250,0,1},
	{225.500,0,1},
	{226.000,0,1},
	{226.500,0,1},
	{231.000,0,1},
	{231.250,0,1},
	{231.500,0,1},
	{232.000,0,1},
	{232.250,0,1},
	{232.500,0,1},
	{232.750,0,1},
	{233.000,0,1},
	{233.250,0,1},
	{233.500,0,1},
	{234.000,0,1},
	{234.250,0,1},
	{234.500,0,1},
	{239.000,0,1},
	{239.250,0,1},
	{239.500,0,1},
	{240.000,0,1},
	{240.250,0,1},
	{240.500,0,1},
	{240.750,0,1},
	{243.000,0,1},
	{243.250,0,1},
	{243.500,0,1},
	{243.750,0,1},
}
lightly = {
	{246.500,0,1},
	{247.000,1,1},
	{247.500,2,1},
	{249.000,3,1},
	{250.500,0,1},
	{251.000,2,1},
	{251.500,1,1},
	{253.000,3,1},
	{254.500,0,1},
	{255.000,3,1},
	{255.500,2,1},
	{257.000,1,1},
	{257.750,2,1},
	{258.500,3,1},
	{259.000,1,1},
	{260.000,2,1},
	{261.000,0,1},
	{262.500,3,1},
	{263.000,2,1},
	{263.500,1,1},
	{265.000,0,1},
	{266.500,3,1},
	{267.000,1,1},
	{267.500,2,1},
	{269.000,0,1},
	{270.000,0,1},
	{271.000,0,1},
	{271.500,3,1},
	{272.500,2,1},
	{273.000,3,1},
}
youastupidh = {
	{276.000,0,1},
	{277.000,0,1},
	{277.000,2,1},
	{277.500,0,1},
	{277.750,0,1},
	{278.500,2,1},
	{279.000,3,1},
	{280.000,2,1},
	{280.500,0,1},
	{281.000,0,1},
	{281.000,2,1},
	{281.500,0,1},
	{281.750,0,1},
	{282.500,2,1},
	{283.000,3,1},
	{284.000,0,1},
	{284.000,2,1},
	{284.500,0,1},
	{285.000,0,1},
	{285.000,2,1},
	{285.500,0,1},
	{285.750,0,1},
	{286.500,2,1},
	{287.000,3,1},
	{288.000,2,1},
	{288.500,0,1},
	{289.000,0,1},
	{289.500,0,1},
	{289.750,0,1},
	{290.000,2,1},
	{291.000,3,1},
	{292.000,0,1},
	{292.000,2,1},
	{292.500,0,1},
	{292.500,2,1},
	{293.000,0,1},
	{293.000,2,1},
	{293.500,0,1},
	{293.750,0,1},
	{294.500,2,1},
	{295.000,3,1},
	{296.000,2,1},
	{296.500,0,1},
	{297.000,0,1},
	{297.000,2,1},
	{297.500,0,1},
	{297.750,0,1},
	{298.500,2,1},
	{299.000,3,1},
	{300.000,2,1},
	{301.000,0,1},
	{301.000,2,1},
	{301.500,0,1},
	{301.750,0,1},
	{302.500,2,1},
	{303.000,3,1},
	{304.000,2,1},
	{304.500,0,1},
	{305.000,0,1},
	{305.000,2,1},
	{305.500,0,1},
	{305.750,0,1},
}
_________ = {
	{355.750,0,1},
	{356.250,0,1},
	{357.750,0,1},
	{358.250,0,1},
	{359.750,0,1},
	{360.250,0,1},
	{387.750,0,1},
	{388.250,0,1},
	{389.750,0,1},
	{390.250,0,1},
	{391.750,0,1},
	{392.250,0,1},
}
somethingdifferernmt = {
	{409.000,0,1},
	{409.000,1,2,length=2.000},
	{409.750,3,1},
	{410.000,3,1},
	{410.500,3,1},
	{411.500,3,1},
	{411.750,3,1},
	{412.000,3,1},
	{412.500,0,1},
	{412.500,1,2,length=2.500},
	{412.500,3,1},
	{412.750,3,1},
	{413.000,3,1},
	{413.250,3,1},
	{413.500,3,1},
	{413.750,3,1},
	{414.000,3,1},
	{414.500,0,1},
	{415.500,1,1},
	{415.500,3,1},
	{416.000,0,1},
	{416.000,1,1},
	{416.500,0,1},
	{416.500,1,1},
	{417.000,0,1},
	{417.000,1,2,length=2.000},
	{417.000,3,1},
	{417.250,3,1},
	{417.500,3,1},
	{417.750,3,1},
	{418.000,3,1},
	{418.500,3,1},
	{418.750,0,1},
	{419.500,3,1},
	{419.750,0,1},
	{419.750,3,1},
	{420.000,0,1},
	{420.000,1,2,length=0.750},
	{420.000,3,1},
	{420.500,3,1},
	{420.750,3,1},
	{421.000,0,1},
	{421.000,1,2,length=2.000},
	{421.000,3,1},
	{421.250,3,1},
	{421.500,3,1},
	{421.750,0,1},
	{421.750,3,1},
	{422.000,3,1},
	{422.250,3,1},
	{422.500,0,1},
	{422.500,3,1},
	{423.500,0,1},
	{423.500,1,1},
	{423.500,3,1},
	{424.000,0,1},
	{424.000,1,1},
	{424.500,0,1},
	{424.500,1,1},
	{424.500,3,1},
	{425.000,0,1},
	{425.000,1,2,length=2.000},
	{425.000,3,1},
	{425.250,3,1},
	{425.500,3,1},
	{425.750,3,1},
	{426.000,3,1},
	{426.500,3,1},
	{427.000,3,1},
	{427.250,3,1},
	{427.500,1,1},
	{427.500,3,1},
	{427.750,3,1},
	{428.000,0,1},
	{428.000,1,2,length=0.250},
	{428.000,3,1},
	{428.500,0,1},
	{428.500,1,2,length=2.500},
	{428.500,3,1},
	{428.750,3,1},
	{429.000,3,1},
	{429.250,3,1},
	{429.500,3,1},
	{429.750,3,1},
	{430.000,3,1},
	{430.500,0,1},
	{430.500,3,1},
	{431.500,0,1},
	{431.500,1,1},
	{431.500,3,1},
	{432.000,0,1},
	{432.000,1,1},
	{432.000,3,1},
	{432.500,1,1},
	{432.500,3,1},
	{433.000,0,1},
	{433.000,1,2,length=2.000},
	{433.000,3,1},
	{433.250,3,1},
	{433.500,3,1},
	{433.750,3,1},
	{434.000,3,1},
	{434.500,0,1},
	{434.500,3,1},
	{436.000,0,1},
	{436.000,1,2,length=0.750},
	{436.000,3,1},
	{436.250,3,1},
	{436.500,3,1},
	{436.750,3,1},
	{437.000,0,1},
	{437.000,1,2,length=0.500},
	{437.000,3,1},
	{437.250,3,1},
	{437.500,3,1},
	{437.750,0,1},
	{437.750,1,2,length=0.500},
	{437.750,3,1},
	{438.000,3,1},
	{438.500,0,1},
	{438.500,1,2,length=0.500},
	{438.500,3,1},
	{438.750,3,1},
	{439.000,3,1},
	{439.500,3,1},
	{441.000,0,1},
}
----------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
---------------------------      DEFINE MODS & ACTOR SETUP       -----------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
function rad(deg)
	return math.rad(deg) * 100
end

GAMESTATE:ForceSmoothLines(0)

definemod{'fov',function(a)
	for pn = 1, #PP do
		P[pn]:fov(RealFov(a))
	end
end}
setdefault{90,'fov'}

--auto counter rotation via funny math
definemod{'rotx','roty','rotz',function(xDegrees, yDegrees, zDegrees, plr)
		local function mindf_reverseRotation(angleX, angleY, angleZ)
			local sinX = math.sin(angleX);
			local cosX = math.cos(angleX);
			local sinY = math.sin(angleY);
			local cosY = math.cos(angleY);
			local sinZ = math.sin(angleZ);
			local cosZ = math.cos(angleZ);
			return { math.atan2(-cosX*sinY*sinZ-sinX*cosZ,cosX*cosY),
					math.asin(-cosX*sinY*cosZ+sinX*sinZ),
					math.atan2(-sinX*sinY*cosZ-cosX*sinZ,cosY*cosZ) }
		end
		local DEG_TO_RAD = math.pi / 180
		local angles = mindf_reverseRotation(xDegrees * DEG_TO_RAD, yDegrees * DEG_TO_RAD, zDegrees * DEG_TO_RAD)
		local rotationx,rotationy,rotationz=
			xDegrees,
			yDegrees,
			zDegrees
		local confusionxoffset,confusionyoffset,confusionzoffset=
			(angles[1]*100),
			(angles[2]*100),
			(angles[3]*100)

		return rotationx,rotationy,rotationz,confusionxoffset,confusionyoffset,confusionzoffset
	end,
	'rotationx','rotationy','rotationz','confusionxoffset','confusionyoffset','confusionzoffset'
}

--just vibe
definemod{'vibratex','vibratey','vibrate',function(x,y,w)
	for pn=1,4 do
		P[pn]:vibrate(1)
		P[pn]:effectmagnitude(x+w,y+w,0)
	end
end}

definemod{'arrowpathr','arrowpathg','arrowpathb','arrowpathfadedistance',function(amtr,amtg,amtb,dist)
	for pn = 1, 3 do
		for col = 0, 3 do
			P[pn]:NoClearSplines(true)
			P[pn]:SetNumPathGradientPoints(col,4)
			P[pn]:SetPathGradientPoint(0, col, -6)
			P[pn]:SetPathGradientColor(0, col, amtr/255,amtg/255,amtb/255,0)
			P[pn]:SetPathGradientPoint(1, col, -2)
			P[pn]:SetPathGradientColor(1, col, amtr/255,amtg/255,amtb/255,1)
			P[pn]:SetPathGradientPoint(2, col, dist-4)
			P[pn]:SetPathGradientColor(2, col, amtr/255,amtg/255,amtb/255,1)
			P[pn]:SetPathGradientPoint(3, col, dist)
			P[pn]:SetPathGradientColor(3, col, amtr/255,amtg/255,amtb/255,0)
		end
	end
end,
}
definemod{'colorr','colorg','colorb',function(amtr,amtg,amtb)
	for pn = 1, 3 do
		for col = 0, 3 do
			P[pn]:NoClearSplines(true)
			P[pn]:SetNumStealthGradientPoints(col,1)
			P[pn]:SetStealthGradientPoint(0, col, 0)
			P[pn]:SetStealthGradientColor(0, col, amtr/255,amtg/255,amtb/255,1)
		end
	end
end}

zach:SetDrawByZPosition(true)

stripeframe:fov(RealFov(90))
for i=1,#ligma do
	ligma[i]:zoomto(sw/2,sw/2)
	ligma[i]:hidden(1)
	ligma[i]:zbuffer(1)
	ligma[i]:diffuse(1-(rand.float(0,0.2)),1-(rand.float(0,0.2)),1-(rand.float(0,0.2)),1)
	ligma[i]:blend('add')
end
for i=1,#particle do
	particle[i]:blend('add')
	particle[i]:zbuffer(1)
	particle[i]:diffuse(1-(rand.float(0,0.2)),1-(rand.float(0,0.2)),1-(rand.float(0,0.2)),1)
	particle[i]:x(rand.int(0,sw))
end
definemod{'pfov',function(a)
	particleframe:fov(RealFov(a))
	particleframe:SetDrawByZPosition(true)
end}

pentaframe:fov(RealFov(90))
pentaframe:zbuffer(1)

for i=1,#pentagon do
	pentagon[i]:zbuffer(1)
	pentagon[i]:x(scx)
	pentagon[i]:blend('add')
end
definemod{'pentagonzoom','pentagonzscale','pentagonrotz','pentagonoffset','pentagonrotzoffset','pentagona','pentagontype',function(z,zsc,rz,penta,rzo,a,t)
	for i=1,#pentagon do
		pentagon[i]:y(scy - (8*GAMESTATE:GetZ(0, 0, pentagon[i]:GetZ()+16))*t)
		--pentagon[i]:rotationx(90/math.pi*math.atan(GAMESTATE:GetZ(0, 0, pentagon[i]:GetZ()+16))-GAMESTATE:GetZ(0, 0, pentagon[i]:GetZ()+15)-90)
		pentagon[i]:zoomto(sw*z,sw*z)
		pentagon[i]:rotationz((rz+(i*(rz)))+rzo)
		pentagon[i]:z(((((zsc*i)+zsc*#pentagon)+(penta*zsc))%(zsc*#pentagon)-zsc*(#pentagon/2))-((zsc)*(#pentagon/2.5)))
		pentagon[i]:diffusealpha(-0.00000125*math.pow(pentagon[i]:GetZ(),2)+a)
	end
end}
setdefault{
	0.5,'pentagonzoom',
	60,'pentagonzscale',
	5,'pentagonrotz',
	--72/20,'pentagonrotz',
	
}
func{292,4,function()
	print(GAMESTATE:GetY(0,0,0))
end}

definemod{'particlerotzoffset','particlerotyoffset','particlerotzperiod','particlerotyperiod',function(z,y,pz,py)
	for i=1,#particle do
		particle[i]:rotationz((z/pz)*(i/4))
		particle[i]:rotationy((math.cos((y+(i^4))/py)*90)+90)
	end
end}
setdefault{256,'particlerotyperiod',8,'particlerotzperiod'}

definemod{'particlexoffset','particleyoffset','particlezoffset','particleyperiod','particleyspread','particlexscale','particleyscale','particlezscale','particley','particlespeedspread',function(x,y,z,yp,ys,xsc,ysc,zsc,ypos,ss)
	for i=1,#particle do
		particle[i]:x((math.sin((x+(i^4))/(256-(i^ss%107)))*(xsc-i))+scx-i)
		particle[i]:z((math.cos((z+(i^4))/(256-(i^ss%107)))*(zsc-i)/2))

		particle[i]:y(((math.sin((y+(i^2))/(256-(i^10%107)))*(ysc/scy*scy-i))+ysc/scy*scy-i)+(ypos)+(i*ys))
	end
end}
func{65,32,function()
	for i=1,#particle do
		if particle[i]:GetZ()>-100 then 
			particle[i]:diffusealpha((300-particle[i]:GetZ()%300)/500)
		end
	end
end}
setdefault{
	0,'particlexoffset',
	0,'particlezoffset',
	0,'particleyperiod',
	0,'particleyspread',
	19,'particlespeedspread',
	0,'particleyscale',
	0,'particlexscale',
	0,'particlezscale',
	scy*1.25,'particley',
	100,'scrollspeedmult',
	400,'arrowpathfadedistance'
}
definemod{'particlezoom',function(a)
	for i = 1,#particle do
		particle[i]:zoomto(sw*(a*((i+20)/100)/100),sw*(a*((i+20)/100)/100))
		particle[i]:zbuffer(1)
	end
end}
colorsprite:SetTexture(coloraft:GetTexture())
definemod{'blendr','blendg','blendb','blenda',function(r,g,b,a)
	colorsprite:GetShader():uniform3f('col2',r/255,g/255,b/255)
	colorsprite:GetShader():uniform1f('opacity',a/255)
end}
colorsprite:GetShader():uniform3f('col3',255/255,255/255,255/255)
--colorsprite:GetShader():uniform3f('col3',140/255,250/255,174/255)

backing:diffuse(7/255,70/255,70/255,1)
backing:xywh(scx,scy,sw,sh)

definemod{'plusspeedx','plusspeedy','plusrotx','plusroty','plusrotz',function(x,y,rx,ry,rz)
	plus:texcoordvelocity(x,y)
	plus:rotationx(rx)
	plus:rotationy(ry)
	plus:rotationz(rz)
end}
definemod{'plusmult','plusskewx','plusskewx','plusskewy',function(m,sx,sy)
	plus:customtexturerect(0,0,m,m)
	plus:skewx(sx)
	plus:skewy(sy)
end}
definemod{'stripespeedx1','stripespeedy1','stripespeedx2','stripespeedy2',function(a1,a2,b1,b2)
	stripe[1]:texcoordvelocity(a1,a2)
	stripe[2]:texcoordvelocity(b1,b2)
end}
definemod{'striperotx1','striperotx2','striperoty1','striperoty2','striperotz1','striperotz2','stripezoom1','stripezoom2','pluszoom',function(x1,x2,y1,y2,z1,z2,zo1,zo2,zo3)
	stripe[1]:rotationx(x1)
	stripe[2]:rotationx(x2)
	stripe[1]:rotationy(y1)
	stripe[2]:rotationy(y2)
	stripe[1]:rotationz(z1)
	stripe[2]:rotationz(z2)

	stripe[1]:zoomto(sw*zo1,sw*zo1)
	stripe[2]:zoomto(sw*zo2,sw*zo2)
	plus:zoomto(sw*zo3,sw*zo3)
end}
definemod{'stripemult1','stripeskew1','stripemult2','stripeskew2',function(m1,s1,m2,s2)
	stripe[1]:customtexturerect(0,0,m1,m1)
	stripe[2]:customtexturerect(0,0,m2,m2)
	stripe[1]:skewx(s1)
	stripe[2]:skewy(s2)
	
end}
setdefault{4,'stripezoom1',4,'stripezoom2'}
definemod{'striper1','stripeg1','stripeb1','stripea1','striper2','stripeg2','stripeb2','stripea2',function(r1,g1,b1,a1,r2,g2,b2,a2)
	stripe[1]:diffuse(r1/255,g1/255,b1/255,a1/255)
	stripe[2]:diffuse(r2/255,g2/255,b2/255,a2/255)
	plus:diffuse(r1/255,g1/255,b1/255,a1/255)
end}

stripe[1]:z(-300)
plus:xy(scx,scy)
plus:zoomto(sw*4,sw*4)
for i=1,#stripe do
	stripe[i]:xy(scx,scy)
	stripe[i]:zoomto(sw*4,sw*4)
	--stripe[i]:blend('invertdest')
end

rsprite:SetTexture(raft:GetTexture())
--rsprite:hidden(1)

definemod{'backingr','backingg','backingb',function(r,g,b)
	backing:diffuse(r/255,g/255,b/255,1)
end}
--bro it took me so long to do this im at measure 400

definemod{'spritealpha','spritex','spritey','spritezoom','spriterotz','spriteskewx','spriteskewy',function(a,x,y,z,rz,sx,sy)
	rsprite:diffusealpha(a/100)
	rsprite:xy(scx+x,scy+y)
	rsprite:zoom(z)
	rsprite:rotationz(rz)
	rsprite:skewx(sx/100)
	rsprite:skewy(sy/100)
end}
setdefault{
	0,'spritealpha',
	1,'spritezoom',
	4,'pluszoom',
}

----------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
---------------------------      BEGINNING OF MODS       -------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
setdefault{
	2,'xmod',
	100,'modtimer',
	100,'dizzyholds',
	100,'halgun',
	100,'stealthpastreceptors',
	100,'zbuffer',
	200,'zoomz',
	100,'disablemines',
	197,'arrowpathr',
	216,'arrowpathg',
	209,'arrowpathb',
	244,'colorr',
	237,'colorg',
	234,'colorb',
	255,'blenda',
	255,'stripea1',
	255,'stripea2',
}
ease{0,1,outExpo,
	6/2,'striper1',
	188/2,'stripeg1',
	193/2,'stripeb1',

	120/2,'striper2',
	209/2,'stripeg2',
	174/2,'stripeb2',

	2/32,'stripespeedy1',
	9/32,'stripespeedy2',

}
set{0,
	90,'arrowpathdrawsizeback',
	90,'drawsizeback',
	40,'plusmult',
	-0.1,'plusspeedx',
	-0.05,'plusspeedy',
	90,'striperotz1',
	-0,'striperotz2',
	-20,'striperotx1',
	20,'striperotx2',
	20,'striperoty1',
	-20,'striperoty2',
	6,'blendr',
	60,'blendg' ,
	60,'blendb',
	255,'blenda',
	12,'stripemult1',
	12,'stripemult2',
	
}

set{0,
	100,'reverse',
	200,'tiny',
	50,'mini',
}
add{1,1,flip(outCirc),
	100,'arrowpath',
	10000,'arrowpathgirth'

}
add{1,1,pop,
	-100,'tiny',
}
ease{0,1,inCirc,
	0,'tiny',
	20,'rotx',
}
ease{0,2,inOutCirc,
	0,'reverse'
}
ease{1,2,outCirc,
	0,'rotx'
}

set{0,
	-30000,'squareperiod',
	300,'squareoffset',
}
add{33,4,outQuad,
	30/2,'backingr',
	80/2,'backingg',
	100/2,'backingb',
}
inc = 0
for i,v in ipairs(percussion1) do 
	if v[2]==0 then
		ease{v[1],1,flip(outExpo),
			10000,'arrowpathgirth',
		}
		add{v[1],1,flip(outExpo),
			-100,'tiny',
		}
		add{v[1],4,flip(outQuad),
			30*0.75,'backingr',
			80*0.75,'backingg',
			90*0.75,'backingb',
		}
		ease{v[1],3,flip(outQuad),
			6,'striper1',
			188,'stripeg1',
			193,'stripeb1',

			92,'striper2',
			209,'stripeg2',
			174,'stripeb2',
		}
	elseif v[2]==2 then
		--cant hear it :(
	elseif v[2]==3 then
		inc=inc+1
		local inv=(inc%2)*2-1
		ease{v[1],3,flip(outExpo),
			-300,'tinyx'
		}
		ease{v[1],2,flip(outCirc),
			-100,'tinyy',
			50,'zoomy',
		}
	end
end
--ligma stuff

func{65,8,outExpo,0,1,function(a)
	ligma[1]:diffusealpha(a)
end}
func{73-2,4,inOutCirc,1,0,function(a)
	ligma[1]:diffusealpha(a)
end}
func{65,8,outSine,0,0.75,function(a)
	ligma[1]:zoom(a)
end}
func{65,function()
	ligma[1]:hidden(0)
	ligma[1]:z(-100)
	ligma[1]:xy(scx,scy)
end}

func{73,8,outExpo,0,1,function(a)
	ligma[2]:diffusealpha(a)
end}
func{81-2,4,inOutCirc,1,0,function(a)
	ligma[2]:diffusealpha(a)
end}
func{73,8,outSine,0,0.75,function(a)
	ligma[2]:zoom(a)
end}
func{73,function()
	ligma[2]:hidden(0)
	ligma[2]:z(-20)
	ligma[2]:xy(scx-20,scy-40)
end}

func{81,8,inOutCirc,0,1,function(a)
	ligma[3]:diffusealpha(a)
	ligma[3]:zbuffer(0)
end}
func{89-2,4,inOutCirc,1,0,function(a)
	ligma[3]:diffusealpha(a)
end}
func{81,8,outCirc,0,1,function(a)
	ligma[3]:zoom(a)
end}
func{81,function()
	ligma[3]:hidden(0)
	ligma[3]:z(0)
	ligma[3]:xy(scx/2,0)
end}

func{89,8,inOutCirc,0,1,function(a)
	ligma[4]:diffusealpha(a)
end}
func{98-2,4,inOutCirc,1,0,function(a)
	ligma[4]:diffusealpha(a)
end}
func{89,8,outCirc,0,2,function(a)
	ligma[4]:zoom(a)
end}
func{89,function()
	ligma[4]:hidden(0)
	ligma[4]:z(0)
	ligma[4]:zbuffer(0)
	ligma[4]:xy(scx,-scy)
end}

ease{65,4,outExpo,
	-30,'striperotx1',
	30,'striperotx2',
	0,'striperoty1',
	-0,'striperoty2',
}
ease{65,4,outSine,
	6/2,'striper1',
	188/2,'stripeg1',
	193/2,'stripeb1',

	120/2,'striper2',
	209/2,'stripeg2',
	174/2,'stripeb2',
}

for i,v in ipairs(beepp) do 
	local inv = (i%2)*2-1

	ease{v[1],2,instant,
		(rand.int(-5,5,5)%20),'striperotx1',
		-(rand.int(-20,20,5)%20),'striperotx2',
		(rand.int(-5,5,5)%20),'striperoty1',
		-(rand.int(-20,20,5)%20),'striperoty2',
	}

	add{v[1],4,outExpo,
		400,'drunkzoffset',
	}
	ease{v[1],1,instant,
		-100,'tiny'..(i)%4,
	}
	ease{v[1],1,instant,
		0,'tiny'..(i-1)%4
	}

	ease{v[1],1,instant,
		-100/2,'movey'..(i)%4
	}
	ease{v[1],1,instant,
		-75/2,'movey'..(i+1)%4
	}
	ease{v[1],1,instant,
		-25/2,'movey'..(i+2)%4
	}
	ease{v[1],1,instant,
		-10/2,'movey'..(i+3)%4
	}
	add{v[1],1,flip(outSine),
		-100/4,'movey'..(i)%4
	}
	add{v[1],1,flip(outSine),
		-75/4,'movey'..(i+1)%4
	}
	add{v[1],1,flip(outSine),
		-25/4,'movey'..(i+2)%4
	}
	add{v[1],1,flip(outSine),
		-10/4,'movey'..(i+3)%4
	}

	ease{v[1],0.5,flip(linear),
		20,'arrowpath'..(i-1)%4,
	}
	ease{v[1],0.5,flip(linear),
		100,'arrowpath'..(i)%4,
	}
	ease{v[1],0.5,flip(linear),
		20,'arrowpath'..(i+1)%4,
	}
	add{v[1],2,flip(outExpo),
		-30,'drunkzperiod',
	}
	ease{v[1],2,pop,
		50*inv,'drunkz',
	}
	if v[1]>40 then
		ease{v[1],1,flip(linear),
			150,'square',
		}
	else
		ease{v[1],1,flip(linear),
			-150,'square',
		}
	end
end
for i=0,3 do
	--MAIN MOVEMENT <=
	ease{8+(i*0.333),1,instant,
		400,'movex'..i,
	plr=2}
	add{8+(i*0.333),0.25,outExpo,
		-100,'movex',
	}
	add{8+(i*0.333),0.333,instant,
		-2.5,'roty',
		-2.5,'rotx',
	}
end

for i=3,0,-1 do
	--MAIN MOVEMENT =>
	add{40-(i*0.333)+1,1,instant,
		-400,'movex'..i,
	plr=2}
	add{40-(i*0.333)+1,0.25,outExpo,
		100,'movex',
	}
	add{40-(i*0.333)+1,0.333,instant,
		2.5,'roty',
		2.5,'rotx',
	}
end
add{8+(0*0.333),0.333,outCirc,
	50,'tiny'..0,
plr=1}
add{8+(1*0.333),0.333,outCirc,
	50,'tiny'..0,
	50,'tiny'..1,
plr=1}
add{8+(2*0.333),0.333,outCirc,
	50,'tiny'..0,
	50,'tiny'..1,
	50,'tiny'..2,
plr=1}
add{8+(3*0.333),0.333,outCirc,
	50,'tiny'..0,
	50,'tiny'..1,
	50,'tiny'..2,
	50,'tiny'..3,
plr=1}

func{0,function()
	for a=1,#P do
		P[a]:x(scx)
	end
end}

--that one calmer bit
ease{65-1,2,inOutBack.params(4),
	0,'tiny0',
	0,'tiny1',
	0,'tiny2',
	0,'tiny3',
	0,'movey0',
	0,'movey1',
	0,'movey2',
	0,'movey3',
}
ease{64-1,4,inOutCirc,
	0,'mini',
}

for i=0,3 do
	add{16-1,2,inOutBack,
		2.5,'roty',
		2.5,'rotx',
	}
	add{16-1,2,inOutCirc,
		50,'movex'..i,
		50,'confusionzoffset'..i,
	plr=1}
	ease{16-1,2,inExpo,
		0,'tiny'..i,
		0,'confusionzoffset'..i,
	plr=1}
	add{16-1,2,inExpo,
		350,'movex'..i,
	
	plr=1}

	add{48-1,2,inOutBack,
		-2.5,'roty',
		-2.5,'rotx',
	}
	add{48-1,2,inOutCirc,
		-50,'movex'..i,
		50,'confusionzoffset'..i,
	plr=1}
	ease{48-1,2,inExpo,
		0,'tiny'..i,
		0,'confusionzoffset'..i,
	plr=1}
	add{48-1,2,inExpo,
		-350,'movex'..i,
	
	plr=1}
end


ease{113-2,2,inCirc,
	100,'mini'
}
ease{113,4,outCirc,
	120,'mini'
}

for i=1,#cine do
	cine[i]:diffuse(0,0,0,1)
end
cine[1]:xy(scx,0)
cine[2]:xy(scx,sh)

cine[3]:xy(0,scy)
cine[4]:xy(sw,scy)

definemod{'horizamt','vertamt',function(a,b)
	cine[1]:zoomto(sw,a/8)
	cine[2]:zoomto(sw,a/8)

	cine[3]:zoomto(b/8,sh)
	cine[4]:zoomto(b/8,sh)
end}
ease{65,8,outCirc,sh*2,'horizamt'}
ease{65+4,4,inExpo,0,'horizamt'}

ease{73,8,outCirc,sw*2,'vertamt'}
ease{73+4,4,inExpo,0,'vertamt'}

ease{81,8,outCirc,sh*2,'horizamt'}
ease{81+4,4,inExpo,0,'horizamt'}

ease{89,8,outCirc,sw*2,'vertamt'}
ease{89+4,4,inExpo,sw*8,'vertamt'}

--particle stuffff!!!
ease{64,33,linear,1000,'particlerotzoffset',1000,'particlerotyoffset'}
ease{65-2,4,inOutCirc,
	100,'particlexoffset',
	100,'particlezoffset',
	scx,'particlexscale',
	500,'particlezscale',
	scx/70,'particlezoom',
	100,'pfov',
}
add{65,8,outCirc,
	--scx/50,'particlezoom',
}
add{65,8,outSine,
	100,'particlexoffset',
	100,'particlezoffset',
}
add{73,8,outSine,
	100,'particleyoffset',
	100,'particlezoffset'
}
ease{73-2,4,inOutCirc,
	--scx/70,'particlezoom',
	0,'particlexscale',
	scy,'particleyscale',
	scy*0.25,'particley',
	0,'particleyspread',
}

ease{81-2,4,inOutCirc,
	--scx/50,'particlezoom',
	200,'particlexoffset',
	200,'particlezoffset',
	scx,'particlexscale',
	scx,'particlezscale',
	0,'particleyscale',
	scy*1.25,'particley',
	10,'particleyspread',
}
add{81,8,outSine,
	100,'particlexoffset',
	100,'particlezoffset'
}

add{89,8,outSine,
	100,'particleyoffset',
	100,'particlezoffset'
}
ease{89-2,4,inOutCirc,
	120,'pfov',
	scx/2,'particlexscale',
	scx,'particlezscale',
	scy,'particleyscale',
	scy*0.25,'particley',
}
ease{89,8,inCirc,
	0,'particleyspread',
}

--particle section molds

ease{65-2,4,inOutCirc,
	40,'drunkz',
	40,'drunk',
	-30,'drunkperiod',
	-10,'drunkperiod',
	100,'orient',
	-25,'flip',
}
ease{65+8-2,4,inOutExpo,
	100,'reverse',
	0,'flip',
	-100,'movex0',
	-100,'movex1',
	100,'movex2',
	100,'movex3',
}
ease{65+16,8,outSine,
	100,'mini',
	50,'tiny'
}
ease{65+16-2,4,inOutExpo,
	0,'reverse',
	-25,'flip',
	0,'movex0',
	50,'mini',
	0,'movex1',
	0,'movex2',
	0,'movex3',
}
ease{65+24,8,inQuart,
	150,'zoomy',
	-20,'reverse',
plr=1}
ease{65+24-2,4,inOutExpo,
	0,'flip',
	-50,'mini',
plr=1}
set{65,
	0,'zoom',
plr=2}
set{87,
	0,'zoom',
	0,'flip',
	0,'tiny',
	-30,'rotz',
	30,'roty',
plr=2}
ease{95,2,outSine,20,'brake'}
ease{95,2,inSine,100,'stealth',100,'dark',100,'hidenoteflash',0,'particlezoom',plr=1}
ease{97-2,4,inOutCirc,
	100,'zoom',
	0,'rotz',
	0,'roty',
plr=2}
ease{97,4,flip(outExpo),
	-300,'tiny',
	-30,'flip',
	-4,'particleyspread',
	scx/32,'particlezoom',
plr=2}
ease{97,2,outExpo,
	0,'particlezoom',
}
ease{97,8,outExpo,
	0,'mini',
}
--particle accent section

ticki=-1
tickj=-1
tickk=-1
tickl=-1
for i=0,3 do
	--set{64,-30,'drunkperiod'..i}
	--set{64,1000,'bumpyxperiod'..i}
end
for i,v in ipairs(tick) do
	if v[2]==0 then 
		ticki=ticki+1
		add{v[1],2,pop,
			200,'drunkoffset'
		}
		add{v[1],2,pop,
			20,'stealth'..ticki%4
		}
		ease{v[1],1,flip(outExpo),
			100,'arrowpath'..ticki%4,
		}
	elseif v[2]==1 then
		tickj=tickj+1
		add{v[1],2,pop,
			200,'drunkoffset'
		}
		add{v[1],2,pop,
			20,'stealth'..tickj%4
		}
		ease{v[1],1,flip(outExpo),
			100,'arrowpath'..tickj%4,
		}
	elseif v[2]==2 then
		tickk=tickk+1
		add{v[1],1,pop,
			1000*((tickk%4)+1),'arrowpathgirth',
			66*((tickk%4)+1),'pulse',
			(scx/70)*((tickk%4)+1),'particlezoom',
		plr=1}
	elseif v[2]==3 then
		tickl=tickl+1
		add{v[1],1,pop,
			200*((tickl%4)+1),'arrowpathgirth',
			20*((tickl%4)+1),'pulse',
			(scx/200)*((tickl%4)+1),'particlezoom',
		plr=1}
	end
end

jive=0
for i,v in ipairs(give_2) do
	inv = (i%2)*2-1
		add{v[1],2,flip(outExpo),
			-50*inv,'noteskew',
			rad(-45/2)*inv,'confusionzoffset',
		}
end
for i,v in ipairs(hitsmygive) do
	if v[2]==0 then
		ease{v[1],2,flip(outExpo),
			-100-(i*10),'tiny',
		}
	else
		inv = (jive%2)*2-1
		ease{v[1],2,flip(outExpo),
			-10*inv,'noteskew',
		}
		jive=jive+1

	end
end

for i=0,3 do 
	ease{97+i*2,2,outExpo,
		10*i,'rotx',
		-40,'tinyz',
	}
end
for i=0,7 do 
	add{105+i*0.5,1,outExpo,
		2.5,'rotx',
		-20,'tinyz',
	}
end
ease{113-2,4,inOutCirc,0,'rotx',0,'tinyz',0,'drunkz',0,'drunk',0,'brake',scx*4,'horizamt'}
for i=0,5 do 
	add{109+(i*(2/3)),0.66,outExpo,-10,'rotx',-scx*(8/3),'vertamt'}
	ease{109+(i*(2/3)),0.66,outExpo,-30*(i/4)*((i%2)*2-1),'roty',}
end

for i=0,5 do 
	func{109+(i*(2/3)),0.66*3,flip(outSine),1,0,function(a)
		ligma[(i%4)+1]:diffuse(120/255,190/255,240/255,a*(i/8))
		ligma[(i%4)+1]:zbuffer(0)
	end}
	func{109+(i*(2/3)),0.66*3,flip(outExpo),1,0,function(a)
		ligma[(i%4)+1]:zoomto( sw/8*(1.5*(20*a-i)),sw/8*(1.5*(20*a-i)))
	end}

	func{109+(i*(2/3)),0.66,instant,0,i,function(a)
		colorsprite:GetShader():uniform3f('col3',(255-(((255-140)/6)*a))/255,(255-(((255-250)/6)*a))/255,(255-(((255-174)/6)*a))/255)
	end}
end
	func{116-2,4,inOutQuart,0,1,function(a)
		colorsprite:GetShader():uniform3f('col3',(140+(a*115))/255,(250+(a*5))/255,(174+(a*81))/255)
	end}
	func{113,3,outSine,1,0,function(a)
		ligma[2]:diffuse(120/255,190/255,240/255,0.66*a)
		ligma[2]:zbuffer(0)
	end}
	func{113,3,outExpo,3,1,function(a)
		ligma[2]:zoomto(sw*a,sw*a)
	end}


add{113,3,flip(outExpo),-400,'tiny',-100,'mini'}
ease{113,3,outExpo,-10,'rotx',0,'roty'}
ease{113,5,outSine,100,'stealth',100,'dark'}
ease{116-3,6,inOutCirc,0,'mini',0,'reverse',100,'zoomy',0,'tiny' ,0,'movey'}
ease{116-4,8,inOutCirc,
	-45,'plusrotz',
}
ease{116-2.5,5,inOutSine,
	45,'striperotz1',
}
ease{116-2,4,inOutExpo,
	-45,'striperotz2',
	200,'arrowpathdrawdistanceback',
	20,'drawsize',
	20,'arrowpathdrawsize',
	-45,'rotz',
}
set{116-3,
	1200,'bumpyxperiod',
	1200,'bumpyzperiod',
	300+150,'bumpyzoffset',
	150,'bumpyxoffset',
	100,'z',
	-50,'squareperiod',
	800,'arrowpathgrain',
	10,'movez',
	50,'mini',
	50,'orient',
}
ease{116-3,6,inOutCirc,
	300,'bumpyx',
	300,'bumpyz',
	1.75,'xmod',
plr=1}
ease{116-3,6,inOutCirc,
	-300,'bumpyx',
	-300,'bumpyz',
plr=2}
ease{116-3,6,inOutExpo,
	0,'particlexoffset',
	0,'particlezoffset',
	-scy,'particleyperiod',
	20,'particleyspread',
	--10,'particlespeedspread',
	-100,'particleyscale',
	0,'particley'
}
ease{116,1,outSine,
	100,'arrowpath',
	0,'stealth',
	0,'dark',
	0,'hidenoteflash',
}

add{116,1,outQuart,
	1.75*100*(1),'centered2',
	-1.75*100*(1),'movey',
}
add{117,141-117,linear,
	1.75*100*(141-117),'centered2',
	-1.75*100*(141-117),'movey',
	3000,'particlexoffset',
	3000,'particlezoffset',
}
add{149,173-149,linear,
	1.75*100*(173-149),'centered2',
	-1.75*100*(173-149),'movey',
	3000,'particlexoffset',
	3000,'particlezoffset',
}
jinv=0
for i,v in ipairs(heyhey) do
	local switch=((i+1)%2)
	local inv=((i)%2)*2-1
	local inv2=((i+1)%2)*2-1
	add{v[1],0.5,outCirc,
		100*inv,'invert',
	}
	add{v[1],1,pop,
		1,'stripespeedy1',
	}
end
uigha = {
	{118.000,0,1},
	{120.000,0,1},
	{122.000,0,1},
	{124.000,0,1},
	{126.000,0,1},
	{128.000,0,1},
	{130.000,0,1},
	{132.000,0,1},
	{134.000,0,1},
	{136.000,0,1},
	{138.000,0,1},
	{140.000,0,1},
	{143.000,0,1},
	{147.000,0,1},
	{150.000,0,1},
	{152.000,0,1},
	{154.000,0,1},
	{156.000,0,1},
	{158.000,0,1},
	{160.000,0,1},
	{162.000,0,1},
	{164.000,0,1},
	{166.000,0,1},
	{168.000,0,1},
	{170.000,0,1},
	{172.000,0,1},
}
for i,v in ipairs(uigha) do
	add{v[1],4,flip(outExpo),
		0.5,'stripespeedy2',
	}
end
for i,v in ipairs(flour) do
	if v[2]==0 then 
		local jinvert = (jinv%2)*2-1
		ease{v[1],3,flip(outElastic.params(3,5)),
			200*jinvert,'tipsy'
		}
		ease{v[1],4,flip(outCirc),
			-100,'tiny',
			-200*jinvert,'drunk',
		}
		ease{v[1],2,flip(outSine),
			1.5,'xmod',
		}
		add{v[1],2,flip(outCirc),
			scx/32,'particlezoom'
		}
		add{v[1],1,pop,
			1,'stripespeedy1',
		}
		add{v[1],2,outBack,
			50,'particlexoffset',
			50,'particlezoffset',
		}
		ease{v[1],1,flip(outExpo),
			1000,'arrowpathgirth'
		}
		jinv=jinv+1
	elseif v[2]==2 then
		ease{v[1],1,flip(linear),
			100,'stealth',
		}
	elseif v[2]==3 then 
		if jinv%4==0 then
			add{v[1],4,flip(outElastic.params(3,4)),
				-50,'noteskewx',
				50,'noteskewy',
			}
		elseif jinv%4==1 then
			add{v[1],4,flip(outElastic.params(3,4)),
				50,'noteskewx',
				50,'noteskewy',
			}
		elseif jinv%4==2 then
			add{v[1],4,flip(outElastic.params(3,4)),
				50,'noteskewx',
				-50,'noteskewy',
			}
		elseif jinv%4==3 then
			add{v[1],4,flip(outElastic.params(3,4)),
				-50,'noteskewx',
				-50,'noteskewy',
			}
		end
	end
end

func{141-2,4,inOutExpo,1,0,function(a)
	colorsprite:GetShader():uniform3f('col3',(170+(a*65))/255,(244+(a*11))/255,(250+(a*5))/255)
	for j=1,#particle do
		particle[j]:diffusealpha(a+0.5)
	end
end}

for i=0,15 do 
	ease{141+i*0.5,2,pop,
		0,'stealth'..i%4,
	plr=1}
	ease{141+i*0.5,1,pop,
		100,'arrowpath'..i%4,
	plr=1}
end
add{141,8,inSine,
	scy,'particley',
}
ease{141-2,4,inOutCirc,
	94,'spritealpha',
	1.005,'spritezoom',
	0,'arrowpath',
	80,'stealth0',
	80,'stealth1',
	80,'stealth2',
	80,'stealth3',
}
ease{141-2,4,inOutCirc,
	-20,'rotx',
	0,'bumpyx',
	0,'rotz',
	sw*4,'vertamt',
	5000,'arrowpathgirth',
plr=1}
add{141-2,4,inOutCirc,
	200,'bumpyxoffset',
	200,'bumpyzoffset',
}

ease{149-2,4,inOutCirc,
	-45,'rotz',
	100,'arrowpath',
	0,'stealth0',
	0,'stealth1',
	0,'stealth2',
	0,'stealth3',
	0,'spritealpha',
	1,'spritezoom',
}
ease{149-2,4,inOutCirc,
	300,'bumpyx',
	0,'rotx',
	0,'vertamt',
	0,'arrowpathgirth',
plr=1}

func{149-2,4,inOutExpo,0,1,function(a)
	colorsprite:GetShader():uniform3f('col3',(170+(a*65))/255,(244+(a*11))/255,(250+(a*5))/255)
	for j=1,#particle do
		particle[j]:diffusealpha(a+0.5)
	end
end}
func{178-4,8,inOutExpo,0,1,function(a)
	backing:diffuse((7*a*10)/255,70/255,70/255,1)
end}

ease{173,8,outCirc,
	0,'bumpyx',
	0,'bumpyz',
	0,'rotz',
	82,'striper1',
	82,'stripeg1',
	82,'stripeb1',

	90,'striper2',
	90,'stripeg2',
	90,'stripeb2',

	40,'blendr',
	40,'blendg',
	40,'blendb',

	0,'striperotx1',
	0,'striperotx2',
	0,'striperoty1',
	0,'striperoty2',
plr=2}

add{173,8,outSine,

	300,'bumpyxperiod',
	300,'bumpyzperiod',
	0.5*300,'bumpyzoffset',
	0.5*300/4,'bumpyxoffset',
plr=1}
ease{173-4,8,inOutCirc,
	100,'stealth',
	100,'dark',
	100,'hidenoteflash',
	100,'z',
	0,'orient',
plr=1}
ease{173-4,8,inOutCirc,
	0,'arrowpath',
	400,'bumpyx',
	400,'bumpyz',
	0,'rotz',
plr=1}
add{173-4,8,inOutQuad,
	-100,'movey',
plr=1}
add{173-4,8,inOutQuad,
	50,'bumpyxoffset',
	50,'bumpyzoffset',
plr=2}

for i=0,15 do 
	add{173+i*0.5-0.5,1,inOutExpo,
		sw/4,'horizamt',
		
	}
end
set{181,
	0,'striper1',
	0,'stripeg1',
	0,'stripeb1',

	0,'striper2',
	0,'stripeg2',
	0,'stripeb2',

	0,'stripespeedx1',
	0,'stripespeedy1',
	0,'stripespeedx2',
	0,'stripespeedy2',
	-0.95,'stripemult1',
	-0.95,'stripemult2',

	900,'zigzagperiod',

	0,'stealth',
	0,'dark',
	0,'hidenoteflash',
	0,'bumpyx',
	0,'bumpyz',
	0,'movey',
	0,'centered2',
	1.5,'xmod',
}
func{181,4,outExpo,0.7,1,function(a)
	backing:diffuse(90*a/255,50*a/255,50*a/255,1)
end}

ease{213-2,4,inOutExpo,
	100,'backingr',
	70,'backingg',
	70,'backingb',
}
ease{181-2,2,inCirc,
	0,'rotx',
	0,'arrowpath'
}
ease{181,8,flip(outCirc),
	1000,'arrowpathgirth',
	-300,'tiny',
	200,'zigzag',
	-20,'rotz',
	300,'tipsy',
}
ease{189,6,flip(outCirc),
	-300,'tiny',
	-200,'zigzag',
	20,'rotz',
	-300,'tipsy',
	1000,'arrowpathgirth',
}
ease{181,8,flip(outSine),
	70,'spritealpha',
	1.1,'spritezoom',
}
ease{189,6,flip(outSine),
	20,'spritealpha',
	1.05,'spritezoom',
}
ease{181,4,outExpo,
	255,'blenda',
}
ease{181,8,outExpo,
	sw*2,'horizamt',
	sw*2,'vertamt',
	-1,'stripemult1',
	-1,'stripemult2',
}
ease{189,8,outExpo,
	sw*3,'horizamt',
	sw*3,'vertamt',
	50,'z',
	0,'mini',
	0,'orient',
}
set{189,
	100,'scrollspeedmult0',
	100,'scrollspeedmult1',
	100,'scrollspeedmult2',
	100,'scrollspeedmult3',
	-10,'stripemult2',
	300,'drunkzsize',
	0,'spritex',
	50,'spritealpha'
}
for i,v in ipairs(persussion) do
	if v[2]==0 then
		add{v[1],1,flip(outExpo),
			-200,'tiny',
		}
	elseif v[2]==1 then 
		add{v[1],8,flip(outExpo),
			-0.05,'spritezoom',
		}
	elseif v[2]==3 then 
		add{v[1],2,flip(outExpo),
			100,'tipsy',
			-20,'flip',
			-100,'drunkz',
			2000,'arrowpathgirth',
			
		}
		add{v[1],8,flip(outExpo),
			50,'spritealpha',
		}
		ease{v[1],4,flip(outExpo),
			300,'cubicz',
			100,'arrowpath',
			150,'scrollspeedmult0',
			150,'scrollspeedmult1',
			150,'scrollspeedmult2',
			150,'scrollspeedmult3',
		}

	end
end

for i,v in ipairs(psy) do
	if v[1]<189 then
		add{v[1],4,outBack,
			-30,'squareoffset',
		}
		add{v[1],0.25,flip(linear),
			500,'arrowpathgirth',
		}
		ease{v[1],0.5,flip(inExpo),
			-10-i/4,'square',
		}
	else
		local inv = (i%2)*2-1
		add{v[1],4,outBack,
			-30,'squareoffset',
		}
		add{v[1],0.25,flip(linear),
			500,'arrowpathgirth',
		}
		ease{v[1],0.5,flip(inExpo),
			-20,'square',
		}
	end
	ease{v[1],1,flip(linear),
		100,'arrowpath'..i%4
	}
	ease{v[1],1,flip(linear),
		rand.int(-5,5),'spritex',
	}
end

ease{196,0.5,square,
	100,'flip'
}

for i=0,7 do
	local inv=(i%2)*2-1
	ease{197+i-1,1,inExpo,
		-100*inv,'tipsy',
		-100*inv,'drunk',
	}
	ease{197+i,1,outQuart,
		0*inv,'tipsy',
		0*inv,'drunk',
	}
end
ease{205-4,4,inExpo,
	100,'mini',
	40,'rotx',
}
ease{205,2,flip(inCirc),
	0,'mini',
	0,'rotx',
}
ease{207,2,flip(inCirc),
	0,'mini',
	0,'rotx',
}
ease{207,2,inExpo,
	0,'rotx',
	25,'mini',
	0,'tiny',
}

for i=0,3 do
	add{197+i*2,1,flip(outBack),
		-100,'tiny',
		100,'scrollspeedmult',
	}
	add{197+i*2-1,2,inOutExpo,
	10,'rotx',
	15,'movey',
	---25,'tiny',
}
end

ease{211,4,flip(outExpo),
	20,'tanbumpyx',
	20,'spiralx',
	300,'tanbumpyxperiod',
	200,'arrowpathgrain',
	-300,'tanbumpyxoffset'
}

ease{219,2,flip(outSine),
	20,'tanbumpyx',
	300,'tanbumpyxperiod',
	200,'arrowpathgrain',
	-300,'tanbumpyxoffset',
}


ease{235,1,flip(outExpo),
	50,'arrowpath',
	50,'arrowpathgirth',

	20,'tanbumpyx',
	-300,'tanbumpyxoffset'
}

ease{235,2,outExpo,
	10,'tanbumpyx',
	100,'glitchytan',
	200,'arrowpathgrain',
}
ease{235,2,flip(outExpo),
	-300,'tiny',
	rad(360),'confusionzoffset'
}
ease{235,0.5,flip(outExpo),
	50,'arrowpath',
}
ease{235,1,flip(outSine),
	50,'arrowpathgirth',
	20,'tanbumpyx',
	300,'tanbumpyxperiod',
	-300,'tanbumpyxoffset',
	300,'attenuatex',
}
ease{236,3,flip(outExpo),
	300,'tanbumpyxperiod',
	-300,'tanbumpyxoffset'
}
ease{236,1,flip(inExpo),
	50,'arrowpathgirth',
	5,'tanbumpyx',
	300,'attenuatex',
}
ease{237,1,outExpo,
	0,'tanbumpyx'
}
ease{209,2,square,1.01,'spritezoom',89,'spritealpha'}

ease{219,4,flip(outExpo),
	-100,'invert',
	-300,'tipsy',
	200,'tiny',

}

--dies
for i=0,8 do
	ease{227+i*0.25,1,flip(outExpo),
		rand.int(-100,100),'movex0',
		rand.int(-100,100),'movex1',
		rand.int(-100,100),'movex2',
		rand.int(-100,100),'movex3',
		rand.int(-100,100),'invert',
	}
	ease{227+i*0.25,0.5,flip(outExpo),
		-100,'tiny',
		rand.int(-100,100),'noteskewx',
		rand.int(-100,100),'noteskewy',
	}


	add{227+i*0.25,1,outExpo,
		-1,'stripemult1',
	}
end
--
set{229,-1,'stripemult1'}

ease{209,1,flip(linear),
	100,'arrowpath3',
	2000,'arrowpathgirth',
}
ease{209.75,1,flip(linear),
	100,'arrowpath1',
	2000,'arrowpathgirth',
}
ease{210.5,1,flip(linear),
	100,'arrowpath2',
	2000,'arrowpathgirth',
}
ease{211,1.5,flip(linear),
	100,'arrowpath0',
	2000,'arrowpathgirth',
}

ease{209,4,outExpo,
	50,'zoom',
	100,'attenuatex',
}
ease{209,8,outCirc,
	-25,'invert',
	-100,'tipsy',
}
ease{212-2,2,inExpo,
	75,'zoom',
}
ease{212,2,outExpo,
	100,'zoom',
}
ease{212,2,outExpo,
	0,'tipsy',
}
for i=0,4 do
	ease{212+i*0.25,1,flip(outExpo),
		rand.int(-100,100),'movex0',
		rand.int(-100,100),'movex1',
		rand.int(-100,100),'movex2',
		rand.int(-100,100),'movex3',
		rand.int(-100,100),'invert',
	}
	ease{212+i*0.25,0.5,flip(outExpo),
		-100,'tiny',
		rand.int(-100,100),'noteskewx',
		rand.int(-100,100),'noteskewy',
	}
end

func{196,0.25,square,0,1,function(a)
	peee:z(-a*100)
end}
ease{196,1,flip(outCirc),
	-300,'tiny',
}
ease{196,0.25,square,
	sw*8,'vertamt',
	sw*8,'horizamt',
	100,'stealth',
	100,'dark',
}
ease{196.5,0.25,square,
	sw*8,'vertamt',
	sw*8,'horizamt',
	100,'stealth',
	100,'dark',
}

func{219,4,outExpo,0,20,function(a)
	peee:z(-a)
end}
ease{219-2,4,inOutCirc,
	sw*0.5,'vertamt',
	sw*0.5,'horizamt',
	45,'striperotz2',
	45,'stripea2',
}
func{221,4,outExpo,0,20,function(a)
	peee:z(a)
end}
ease{221-2,4,inOutCirc,
	sw*3,'vertamt',
	sw*3,'horizamt',
	45,'striperotz2',
	255,'stripea2',
}
set{213,
	200,'tiny2',
	200,'tiny3',
plr=1}
set{213,
	200,'tiny0',
	200,'tiny1',
plr=2}
func{235,4,outExpo,0,20,function(a)
	peee:z(-a)
end}


func{209,4,flip(inExpo),1,0,function(a)
	local inv=1-a
	colorsprite:GetShader():uniform3f('col3',(170+(a*65))/255,(244+(a*11))/255,(250+(a*5))/255)
end}

--colswap

mirror{213,3,outCirc,
	20,'rotz'
}
ease{213,1,outCirc,
	100,'dark',
	100,'stealth',
}
ease{213,1,outExpo,
	100,'invert'
}
ease{215-2,2,inCirc,
	0,'invert',
	0,'stealth',
	0,'dark',
	0,'rotz',
}

mirror{221,3,outCirc,
	-20,'rotz'
}
ease{221,1,outCirc,
	100,'dark',
	100,'stealth',
}
ease{221,1,outExpo,
	100,'invert'
}
ease{223-2,2,inCirc,
	0,'invert',
	0,'stealth',
	0,'dark',
	0,'rotz',
}

mirror{229,3,outCirc,
	20,'rotz'
}
ease{229,1,outCirc,
	100,'dark',
	50,'stealth',
}
ease{229,1,outExpo,
	100,'invert'
}
ease{231-2,2,inCirc,
	0,'invert',
	0,'stealth',
	0,'dark',
	0,'rotz',
}

mirror{237,3,outCirc,
	20,'rotz'
}
ease{237,1,outCirc,
	100,'dark',
	100,'stealth',
}
ease{239-2,2,inCirc,
	0,'stealth',
	0,'dark',
	0,'rotz',
}

func{227,4,outExpo,0,20,function(a)
	peee:z(-a)
end}
ease{227,4,instant,
	-0.5,'spritezoom'
}
ease{227,4,outExpo,
	-1,'spritezoom',
	100,'stripea2',
	sw*1,'horizamt',
}
mirror{227,2,flip(inExpo),
	-10,'rotz',
	-50,'movex',
}
ease{229-2,2,inExpo,
	255,'stripea2',
}
func{229,4,outExpo,0,20,function(a)
	peee:z(a)
end}
ease{229,4,instant,
	0.5,'spritezoom'
}
ease{229,4,outExpo,
	1,'spritezoom',
	100,'stripea2',
	sw*3,'horizamt',
}

ease{235-2,4,inOutCirc,
	sw*1,'vertamt',
	sw*1,'horizamt',
}

ease{235-0.5,1,inOutCirc,
	0,'striperotz2'
}
ease{236-2,4,inOutCirc,
	-45,'striperotz2'
}
ease{236,2,outExpo,
	-45,'striperotz2',
	sw*3,'vertamt',
	sw*1,'horizamt',
}
ease{237,4,instant,
	-0.5,'spritezoom',
	0.5,'spritealpha'
}
ease{237,4,outExpo,
	-1,'spritezoom',
	200,'stripea2',
}
ease{243,4,instant,
	0.666,'spritezoom'
}
func{243,4,outExpo,0,45,function(a)
	--particleframe:rotationx(a)
end}
ease{243,4,outExpo,
	1,'spritezoom',
	45,'stripea2',
	sh,'particley',
	scx,'particleyperiod',
	-sh,'particleyscale',
}
set{245,
	0,'particlexoffset',
	0,'particlezoffset',
	0,'particleyperiod',
	3,'particleyspread',
	3,'particlespeedspread',
	scy/8,'particleyscale',
	scx/8,'particlexscale',
	scx/8,'particlezscale',
	0,'pfov',
	scy*0,'particley',
}
ease{245,64,linear,
	700,'particlexoffset',
	700,'particlezoffset',
	-1000,'particlerotzoffset',
	-1000,'particlerotyoffset',
}
ease{245,8,outCirc,
	scx/180,'particlezoom',
	scx/2,'particlexscale',
	scx,'particlezscale',
	scy,'particleyscale',
	scy*0.25,'particley',
	120,'pfov',
}
ease{245,4,pop,
	1.03,'spritezoom',
}
ease{245-2,2,inCirc,
	1.01,'spritezoom',
}
ease{245-2,4,inOutCirc,
	90,'spritealpha',
	0,'vertamt',
	0,'horizamt',

	6,'striper1',
	188,'stripeg1',
	193,'stripeb1',

	120,'striper2',
	209,'stripeg2',
	174,'stripeb2',

}
set{245-2,-400,'attenuatexoffset',4.5,'arrowpathfadedistance'}
add{245,8,flip(outCirc),
	-200,'tiny',
}
ease{245,16,flip(outExpo),
	-200,'tiny',
	0,'mini',
	50,'stealth',
	100,'arrowpath',
	500,'arrowpathgirth',

}
ease{245,8,outCirc,
	150,'wave',
}
ease{245,4,outExpo,
	-400,'attenuatex',
}
ease{245-2,2,inExpo,
	-300,'attenuatex',
}
ease{245,32,linear,
	-60,'rotx',
	-100,'movey',
}
for i,v in ipairs(lightly) do
	add{v[1],8,pop,
		-20,'drunkperiod0',
		-20,'drunkperiod1',
		-20,'drunkperiod2',
		-20,'drunkperiod3',
	}
	ease{v[1],4,flip(outSine),
		100,'arrowpath'..i%4,
		100,'drunk'..i%4,
		500,'arrowpathgirth'
	}
end

func{245,function()
	peee:z(0)
end}
func{245-2,4,inOutExpo,1,0,function(a)
	local inv=1-a
	colorsprite:GetShader():uniform3f('col3',(170+(a*65))/255,(244+(a*11))/255,(250+(a*5))/255)
end}

--eeeeEeee

set{273-4,
	0,'tiny0',
	0,'tiny1',
	0,'tiny2',
	0,'tiny3',
}

set{273-4,
	100,'hide',
plr=2}
set{273-1,
	0,'hide',
	0,'z',
	100,'stealth',
	100,'dark',
	0,'attenuatex',
	400,'tipsy',
plr=2}
ease{273-1,2,inOutCirc,
	0,'stealth',
	0,'dark',
	10,'tipsy',
plr=2}

ease{273-2,4,inOutCirc,
	100,'stealth',
	100,'dark',
	100,'hidenoteflash',
plr=1}

ease{273-2,2,inExpo,
	0,'arrowpath',
}
ease{273-5,10,inOutCirc,
	-64*4,'z',
plr=1}
ease{273-2,4,inOutCirc,
	0,'z',
	5000,'arrowpathgirth',
plr=2}
add{273,8,outSine,
	-60,'rotx',
	60,'movey',
	-100,'z',
	-100,'wave',
	100,'bumpyx',
}
ease{273-4,8,inOutCirc,
	0,'spritealpha',
	-800,'attenuatex',
	-180,'rotx',
	0,'movey',
	2,'xmod',
	10,'arrowpathfadedistance',
	150,'drawsize',
	150,'arrowpathdrawsize',
	-15,'cubicz',
	200,'zigzagperiod',

	0,'particleyspread',
	0,'particlezoom',

	10,'striper1',
	10,'stripeg1',
	10,'stripeb1',

	255,'blenda',

	255,'arrowpathr',
	220,'arrowpathg',
	255,'arrowpathb',

	1.005,'spritezoom'
}
func{273-6,12,inOutExpo,0,1,function(a)
	local inv=1-a
	colorsprite:GetShader():uniform3f('col3',(170+(a*65))/255,(244+(a*11*-1.4))/255,(250+(a*5*-1))/255)
end}
func{273,4,outExpo,1,0.333,function(a)
	backing:diffuse(90*(a*1.5)/255,50*(a*0.5)/255,50*(a*1.5)/255,1)
end}

set{277,
	4000,'arrowpathfadedistance'
}
hoe=0
hoe2=0
hoe3=0
for i,v in ipairs(youastupidh) do
	if v[2]==0 then
		ease{v[1],3,flip(linear),
			100,'arrowpath'..hoe%4,
		plr=2}
		hoe=hoe+1
	elseif v[2]==2 then
		add{v[1],4,flip(outExpo),
			scx/220,'particlezoom',
		}
		ease{v[1],4,flip(outExpo),
			-120,'tinyx',
			-400,'tinyy',
		}
		add{v[1],3,outSine,
			-5,'particlexoffset',
			-5,'particlezoffset',
		}
		hoe2=hoe2+1
	elseif v[2]==3 then
		add{v[1],8,flip(outExpo),
			scx/100,'particlezoom',
		}
		ease{v[1],4,flip(outExpo),
			100,'zigzag',
			-100,'tiny',
		}
		ease{v[1],2,flip(outCirc),
			100,'tipsy',
		}
		ease{v[1],2,flip(inSine),
			1.01,'spritezoom',
		}
		ease{v[1],2,flip(outSine),
			90,'spritealpha'
		}
		hoe3=hoe3+1
	end
end

ease{309-3,6,inOutCirc,
	sw*1,'horizamt',
}
ease{309,32,outSine,
	sw*2,'horizamt',
}

set{277-4,2,'pentagonzoom'}
ease{277-4,8,inOutExpo,
	1,'pentagonoffset',
	-72,'pentagonrotzoffset',
	0.2,'pentagona',
	9,'pentagonrotz',
	0.5,'pentagonzoom'
}
ease{277,4,outExpo,
	50,'spritealpha'
}
ease{277,32,linear,
	50,'pentagonoffset',
	-360/8,'pentagonrotzoffset',
}
ease{305,4,inOutSine,
	0,'pentagona'
}
add{305,4,inOutSine,
	-3,'pentagonoffset',
	-3,'pentagonrotzoffset',
}
add{277,32,linear,
	32*200,'centered2',
	-32*200,'movey',
	-32*12800,'cubiczoffset',
	-32*200,'zigzagoffset',
}
set{309,
	0,'centered2',
	60,'movey',
	0,'cubiczoffset',
}
ease{309-3,6,inOutCirc,
	-360,'rotx',
	0,'bumpyx',
	0,'cubicz',
	50,'drunk',
	50,'tipsy',
	-25,'flip',
}

func{309,4,outExpo,0.333,1,function(a)
	backing:diffuse(90*(a*1.5)/255,50*(a*1.5)/255,50*(a*1.5)/255,1)
end}

func{309-6,12,inOutExpo,1,0,function(a)
	local inv=1-a
	colorsprite:GetShader():uniform3f('col3',(170+(a*65))/255,(244+(a*11*-1.4))/255,(250+(a*5*-1))/255)
end}
func{325-16,16,outSine,0,0.5,function(a)
	ligma[1]:hidden(0)
	ligma[1]:zoom(3)
	ligma[1]:xy(scx,sh*1.5)
	ligma[1]:diffusealpha(a*0.333)
end}

ease{309,32-8,inQuad,
	0,'striperotz2',
	0.5,'stripespeedy2',

}
add{325,2,flip(outExpo),
	0.25,'stripezoom1',
	0.5,'stripezoom2',
	0.0225,'pluszoom',
}
add{325-2,2,inExpo,
	0.25,'stripespeedy2',
	-0.125,'plusspeedy',
	-0.125,'plusspeedx',
	scx/900,'particlezoom',
}

miku = {
	{325.000,2,1},
	{325.750,0,1},
	{326.500,0,1},
	{327.250,0,1},
	{327.750,0,1},
	{328.500,0,1},
	{329.000,2,1},
	{329.750,0,1},
	{330.500,0,1},
	{331.250,0,1},
	{331.750,0,1},
	{332.500,0,1},
}
for i,v in ipairs(miku) do
	if v[2]==0 then
		add{v[1],2,flip(outExpo),
			0.25,'stripezoom1',
			0.25,'stripezoom2',
			0.0225,'pluszoom',
			scx/800,'particlezoom',
		}
		add{v[1],2,flip(outCirc),
			--5,'mini',
			-100,'tiny',
			rand.int(-45,45),'noteskewx',
			rand.int(-45,45),'noteskewy',
		}
	elseif v[2]==2 then
		add{v[1]-2,4,inOutCirc,
			5,'rotx',
			-20,'mini',
		}
		add{v[1],2,flip(outExpo),
			0.25,'stripezoom1',
			0.25,'stripezoom2',
			0.0225,'pluszoom',
			scx/200,'particlezoom',
		}
		func{v[1],2,flip(outSine),0.5,0.7,function(a)
			ligma[1]:hidden(0)
			ligma[1]:zoom(3)
			ligma[1]:xy(scx,sh*1.5)
			ligma[1]:diffusealpha(a*0.333)
		end}
	end
end
add{325-2,2,inQuart,
	0,'tiny',
}
add{325,4,flip(outQuart),
	-20,'mini',
	-300,'tiny',
}

add{329,4,flip(outQuart),
	-20,'mini',
	-300,'tiny',
}
set{309,0,'arrowpathgirth'}
for i=0,(28*2)-1 do
	local rachael= rand.int(-10,10,5)
	ease{309+i*0.5,1,flip(linear),
		100,'arrowpath'..i%4,
	plr=2}
	add{309+i*0.5,4,linear,
		50,'arrowpathgirth',
	}
	add{309+i*0.5,0.5,flip(outSine),
		300,'arrowpathgirth',
	}

	add{309+i*0.5,2,pop,
		-10,'stealth'..i%4,
	plr=1}
	add{309+i*0.5,4,pop,
		rachael,'movex0',
		rachael,'movex1',
		rachael,'movex2',
		rachael,'movex3',
		rand.int(-10,10,5),'movey'..i%4,
		rand.int(-45,45),'confusionzoffset'..i%4,
	}
	ease{309+i*0.5-2,4,inOutCirc,
		rachael,'movex'..i%4,
	}
end
for i=0,7 do
	func{333+i*0.5,0.5,flip(outSine),0.5,(0.7+(i/20)),function(a)
		ligma[1]:hidden(0)
		ligma[1]:zbuffer(0)
		ligma[1]:zoom(3)
		ligma[1]:xy(scx,sh*1.5)
		ligma[1]:diffusealpha(a*0.333)
	end}
	
	ease{333+i*0.5-0.5,1,inOutCirc,
		(-6+(i))*((i%2)*2-1),'rotz',
		(-12+(i))*((i%2)*2-1),'roty',
	}
	add{333+i*0.5,2,flip(outExpo),
		0.25*(i+1),'stripezoom1',
		0.25*(i+1),'stripezoom2',
		0.0225*(i+1),'pluszoom',
	}

	ease{333+i*0.5,2,flip(outExpo),
		rand.int(-20,20),'movex0',
		rand.int(-20,20),'movex1',
		rand.int(-20,20),'movex2',
		rand.int(-20,20),'movex3',
		rand.int(-20,20),'invert',
	}
	ease{333+i*0.5,1,flip(outExpo),
		-300,'tiny',
		rand.int(-100,100),'noteskewx',
		rand.int(-100,100),'noteskewy',
	}
	add{333+i*0.5,1,outExpo,
		20,'movez',
		-20,'tiny',
		20/8,'flip',
		-20/8,'reverse',
		rand.int(-10,20),'skewy',
	}

	add{333+i*0.5,2,flip(outExpo),
		100+(i*20)*((i%2)*2-1),'tipsy',
		scx/(300-(i*30)),'particlezoom',
		sw/(8-(i/2)),'horizamt',
	}
end
add{325,8,outSine,
	100,'particlexoffset',
	100,'particlezoffset',
}
add{333-2,2,inQuart,
	50,'particlexoffset',
	50,'particlezoffset',
}
add{333,8,linear,
	1000,'particlexoffset',
	1000,'particlezoffset',
}

mirror{325-3,3,inExpo,
	20,'rotz',
	20/2,'roty',
}
mirror{325,4,outExpo,
	40,'rotz',
	40/2,'roty',
}

mirror{329-3,3,inExpo,
	-10,'rotz',
	-10/2,'roty',
}
mirror{329,4,outExpo,
	-30,'rotz',
	-30/2,'roty',
}

mirror{333-2,2,inExpo,
	-15,'rotz',
	-15/2,'roty',
}
mirror{333,2,outExpo,
	0,'rotz',
	0/2,'roty',
}

set{309,
	100,'stealth',
	100,'dark',
	0,'hide',
	0,'attenuatex',
	10,'hidden',
	-100,'hiddenoffset',
	-100,'tiny',
	-500,'movey',
	-100,'y',
plr=1}

ease{337,8,outSine,
	0,'tipsy',
	0,'drunk',
	0,'reverse',
	20,'flip',
}
ease{337,2,outCirc,
	100,'stealth',
plr=1}
ease{337-2,4,inOutCirc,
	80,'stealth',
	10,'flip',
	0,'horizamt',
	100,'mini',
	0,'reverse',
	0,'movez',
	0,'tiny',
	-300,'tipsyoffset',
	-300,'drunkoffset',
	0,'stripea2',
}
ease{337,6,flip(outExpo),
	40,'arrowpath',
plr=2}
ease{337,6,outExpo,
	math.random(-180,180),'confusionzoffset0',
	math.random(-180,180),'confusionzoffset1',
	math.random(-180,180),'confusionzoffset2',
	math.random(-180,180),'confusionzoffset3',
plr=2}
ease{337,6,outExpo,
	100,'dark',
}
ease{337,8,outSine,
	120,'stealth',
	120,'dark',
}
ease{337-2,2,inQuart,
	0,'tiny',
	0,'particlezoom',
	0,'reverse',
	0,'striper2',
	0,'stripeg2',
	0,'stripeb2',
}
set{341,
	0,'mini',
	0,'arrowpathgirth',
	0,'movez',
	0,'movey',
	0,'movey0',
	0,'movey1',
	0,'movey2',
	0,'movey3',
	0,'movex0',
	0,'movex1',
	0,'movex2',
	0,'movex3',
	0,'y',
	100,'tinyy',
	0,'stripespeedy2',
	-12,'stripemult2',
	-45,'striperotz2',
	215,'arrowpathr',
	225,'arrowpathg',
	230,'arrowpathb',
	scx*-1.5,'particley',
	scx/1.5,'particlexscale',
	21,'particleyspread',
}

ease{342,4,outCirc,
	0,'stealth',
	100,'stripea2',
plr=2}
ease{342-2,4,inOutCirc,
	0,'confusionzoffset0',
	0,'confusionzoffset1',
	0,'confusionzoffset2',
	0,'confusionzoffset3',
	50,'dark',
	-20,'flip',
plr=2}

ease{343,1,popElastic.params(2,2.5),
	-50,'tinyx',
}
ease{343,1,popElastic.params(2,2),
	-200,'tinyy',
}
ease{343,1,outElastic.params(2,3),
	0,'tinyy',
	0,'flip',
}

func{337,8,outExpo,1,0.333,function(a)
	backing:diffuse(90*(a*1.5)/255,50*(a*1.5)/255,50*(a*1.5)/255,1)
end}
func{337-1,2,inOutExpo,0,1,function(a)
	local inv=1-a
	colorsprite:GetShader():uniform3f('col3',(170+(a*65*-2))/255,(244+(a*11*-2))/255,(250+(a*5*-2))/255)
end}

ease{345,4,outExpo,
	130,'backingr',
	90,'backingg',
	90,'backingb',
}
func{345-3,6,inOutExpo,1,0,function(a)
	local inv=1-a
	colorsprite:GetShader():uniform3f('col3',(170+(a*65*-2))/255,(244+(a*11*-2))/255,(250+(a*5*-2))/255)
end}

func{345,1,outSine,0.7,0,function(a)
	ligma[1]:hidden(0)
	ligma[1]:zbuffer(0)
	ligma[1]:zoom(3)
	ligma[1]:xy(scx,sh*1.5)
	ligma[1]:diffusealpha(a*0.333)
	pentaframe:rotationx(-90)
end}
set{345,0.125,'pentagontype',2,'pentagonzoom',69,'pentagonzscale'}
rachael2=0
for i,v in ipairs(longhits) do
	inv=(rachael2%2)*2-1
	add{v[1]-(v.length),v.length*2,inOutBack.params(0.5),
		250,'bumpyxoffset',
		250,'bumpyzoffset',
	}
	add{v[1],v.length,outSine,
		-200,'tiny',
		100,'particlexoffset',
		100,'particlezoffset',
		2,'pentagonrotzoffset',
		2.7,'pentagonoffset',
		10000,'arrowpathgirth',
	plr=2}
	add{v[1]-(v.length/2),v.length,inOutExpo,
		5*inv*(v.length),'rotz',
		20*inv*(v.length),'roty',
		-200,'tiny',
		-100,'stealth',
		200,'particlexoffset',
		200,'particlezoffset',
		3,'pentagonrotzoffset',
	plr=2}

	ease{v[1],v.length,inCirc,
		0,'rotz',
		0,'roty',
		0,'arrowpathgirth',
	}
	ease{v[1],v.length,inCirc,
		200,'tiny',
	plr=2}
	add{v[1],v.length+0.25,pop,
		0.4,'pentagona'
	}
	add{v[1],v.length,pop,
		0.2,'stripezoom2',
		scx/100,'particlezoom',
	}
	func{v[1],v.length,pop,0,0.7,function(a)
		ligma[1]:hidden(0)
		ligma[1]:zbuffer(0)
		ligma[1]:zoom(3)
		ligma[1]:xy(scx,sh*1.5)
		ligma[1]:diffuse(1,1,1,a*0.333)
	end}
	rachael2=rachael2+1
end
for i,v in ipairs(bighits) do
	local inv = (i%2)*2-1
	add{v[1],2,outBack.params(0.5),
		4*150,'centered2',
		-4*150,'movey',
	}
	add{v[1],2,flip(outSine),
		0.7,'stripezoom2',
	}
	ease{v[1]-1,2,inOutCirc,
		rad(45)*inv,'confusionzoffset',
	}
	ease{v[1],4,outSine,
		rad(0)*inv,'confusionzoffset',
	}
	ease{v[1],2,flip(inSine),
		--0,'stealth',
		--0,'tiny',
	}
	ease{v[1],2,flip(outSine),
		--1000,'wireframegirth',
		100,'arrowpath',
	plr=2}
	ease{v[1],2,flip(outExpo),
		-300,'tiny',
	plr=1}
end
for i,v in ipairs(_________) do
	ease{v[1],2,flip(outExpo),
		rand.int(-50,50),'invert',
		rad(rand.int(-20,20)),'confusionzoffset',
	}
	ease{v[1]-0.5,1,inOutExpo,
		rand.int(-75,75),'noteskewx',
		rand.int(-75,75),'noteskewy',
	}
	ease{v[1],1,flip(linear),
		100,'arrowpath'..i%4,
		50,'arrowpath'..(i-1)%4,
		5000,'arrowpathgirth',
	}
end
for i=0,7 do
	add{346+i*0.125,0.1,instant,
		rad(360)/8,'confusionzoffset'
	}
end
set{361,0,'noteskewx',0,'noteskewy'}
set{393,0,'noteskewx',0,'noteskewy'}
add{347-0.125,0.1,instant,-rad(360),'confusionzoffset'}

ease{345,4,outExpo,0,'spritealpha',255,'blenda'}
for i=0,3 do 
	ease{344+i*0.333,1,flip(outExpo),
		rand.int(-50,50),'movex0',
		rand.int(-50,50),'movex1',
		rand.int(-50,50),'movex2',
		rand.int(-50,50),'movex3',
		rand.int(-50,50),'invert',
	plr=2}
	ease{344+i*0.333,2,flip(outExpo),
		-100,'tiny',
		0,'stealth',
		rand.int(-50,50),'noteskewx',
		rand.int(-50,50),'noteskewy',
	plr=2}
end
set{345,-85,'squareperiod'}
ease{345,1,outSine,
	0.75,'stripespeedy2',
}
ease{345,1,flip(inExpo),
	-400,'tiny',
	0,'stealth',
	20,'square',
	5000,'arrowpathgirth',
}
for i=0,7 do
	add{362+i*0.125,0.1,instant,
		rad(360)/8,'confusionzoffset'
	}
end
add{363-0.125,0.1,instant,-rad(360),'confusionzoffset'}

set{344,
	100,'bumpyx',
	100,'bumpyz',
	1000,'bumpyxperiod',
	1000,'bumpyzperiod',
	500,'bumpyzoffset',
	100,'stealth',
	--100,'dark',
	200,'tiny',
	0,'orient',
	-30,'drunkperiod',
	-30,'drunkzperiod',
}
set{344,
	50,'bumpyx',
	50,'bumpyz',
	0,'z',
plr=1}
set{353,0,'hidenoteflash',}

func{353-3,6,inOutExpo,0,1,function(a)
	local inv=1-a
	colorsprite:GetShader():uniform3f('col3',(170+(a*65*1))/255,(244+(a*11*1.3))/255,(250+(a*5*2))/255)
end}
func{361-3,6,inOutExpo,1,0,function(a)
	local inv=1-a
	colorsprite:GetShader():uniform3f('col3',(170+(a*65*1))/255,(244+(a*11*1.3))/255,(250+(a*5*2))/255)
end}

func{385-3,6,inOutExpo,0,1,function(a)
	local inv=1-a
	colorsprite:GetShader():uniform3f('col3',(170+(a*65*1))/255,(244+(a*11*1.3))/255,(250+(a*5*2))/255)
end}
func{393-3,6,inOutExpo,1,0,function(a)
	local inv=1-a
	colorsprite:GetShader():uniform3f('col3',(170+(a*65*1))/255,(244+(a*11*1.3))/255,(250+(a*5*2))/255)
end}

ease{353-1,2,inOutCirc,
	sw*1,'horizamt',
	sw*2,'vertamt',
}
ease{353-2,4,inOutCirc,
	0,'stealth',
	0,'dark',
	0,'tiny',
plr=1}
set{352,-1,'spritezoom'}
ease{353,1,outCirc,
	50,'spritealpha',
	230,'stripea2',
}

set{353,100,'hide',plr=2}
ease{353.5,2,flip(outExpo),
	-100,'tiny'
}
ease{354,1,flip(outExpo),
	-50,'tiny'
}
ease{355-2,2,inExpo,
	200,'tiny'
}

add{355,2,flip(inExpo),
	-200,'tiny',
}
add{357,2,flip(inExpo),
	-200,'tiny',
}
add{359,2,flip(inExpo),
	-200,'tiny',
}

func{355,4,outExpo,0,-20,function(a)
	peee:z(a)
end}
func{361,4,outExpo,0,-20,function(a)
	peee:z(-a)
end}
set{361,100,'hide',plr=1}
set{361,0,'hide',plr=2}

ease{361-2,4,inOutExpo,
	0,'horizamt',
	0,'vertamt',
	0,'spritealpha',
}
ease{361,1,flip(inExpo),
	-400,'tiny',
	0,'stealth',
	20,'square',
	10000,'arrowpathgirth',
}

set{369,0,'hide',plr=1}
set{369,100,'hide',plr=2}

--sound
add{401.5,1,flip(outExpo),
	-100,'tiny'
}

ease{402,2,pop,
	rand.int(-50,50),'noteskewx',
	rand.int(-50,50),'noteskewy',
	50,'zigzag',
	30,'squarez',
	
	100,'arrowpath',
	1000,'arrowpathgirth',
	0,'tiny'
}
ease{403,2,pop,
	rand.int(-50,50),'noteskewx',
	rand.int(-50,50),'noteskewy',
	50,'zigzag',
	30,'squarez',
	
	100,'arrowpath',
	1000,'arrowpathgirth',
	0,'tiny'
}

add{369,1,flip(outExpo),
	-200,'tiny'
}
add{369.5,1,flip(outExpo),
	-100,'tiny'
}

set{370,-30,'drunkzperiod',-70,'squarezperiod',-50,'zigzagperiod'}
ease{370,2,pop,
	rand.int(-50,50),'noteskewx',
	rand.int(-50,50),'noteskewy',
	50,'zigzag',
	30,'squarez',
	
	100,'arrowpath',
	1000,'arrowpathgirth',
	0,'tiny'
}
ease{371,2,pop,
	rand.int(-50,50),'noteskewx',
	rand.int(-50,50),'noteskewy',
	50,'zigzag',
	30,'squarez',
	100,'arrowpath',
	1000,'arrowpathgirth',
	0,'tiny'
}
add{373,1,flip(outExpo),
	-200,'tiny'
}
add{373.5,1,flip(outExpo),
	-200,'tiny'
}
ease{374,2,pop,
	rand.int(-50,50),'noteskewx',
	rand.int(-50,50),'noteskewy',
	50,'zigzag',
	30,'squarez',
	100,'arrowpath',
	1000,'arrowpathgirth',
	0,'tiny'
}

set{377,100,'hide',plr=1}
set{377,0,'hide',plr=2}

ease{377,1,flip(inExpo),
	-400,'tiny',
	0,'stealth',
	20,'square',
	10000,'arrowpathgirth',
}

set{385,0,'hide',plr=1}
set{385,100,'hide',plr=2}

ease{385.5,2,flip(outExpo),
	-50,'tiny'
}
ease{386,1,flip(outExpo),
	-50,'tiny'
}
ease{387-2,2,inExpo,
	200,'tiny'
}

add{355,2,flip(inExpo),
	-200,'tiny',
}

func{387,4,outExpo,0,-20,function(a)
	peee:z(a)
end}

set{385,0,'hide',plr=1}
set{385,100,'hide',plr=2}

ease{385-2,4,inOutCirc,
	sw*1,'horizamt',
	sw*2,'vertamt',
	50,'spritealpha'
}

ease{393-2,4,inOutExpo,
	0,'horizamt',
	0,'vertamt',
	0,'spritealpha',
}

set{393,100,'hide',plr=1}
set{393,0,'hide',plr=2}

func{393,4,outExpo,0,-20,function(a)
	peee:z(-a)
end}

for i=0,7 do
	add{394+i*0.125,0.1,instant,
		-rad(360)/8,'confusionzoffset'
	}
end
add{395-0.125,0.1,instant,rad(360),'confusionzoffset'}

ease{393,1,flip(inExpo),
	-400,'tiny',
	0,'stealth',
	20,'square',
	10000,'arrowpathgirth',
}
add{387,2,flip(inExpo),
	-200,'tiny',
}
add{389,2,flip(inExpo),
	-200,'tiny',
}
add{391,2,flip(inExpo),
	-200,'tiny',
}

set{401,0,'hide',plr=1}
set{401,100,'hide',plr=2}

ease{405-2,4,inOutCirc,
	--0,'tiny',
	360,'roty'
}
add{405,4,outExpo,
	360*2,'roty'
}
set{409,-90,'zigzagperiod',0,'centered2',0,'movey'}
rachael4=0
rachael5=0
for i,v in ipairs(somethingdifferernmt) do
	if v[2]==0 then 
		local inv = (rachael4%2)*2-1
		ease{v[1],4,flip(outExpo),
			100*inv,'drunkz'
		}
		add{v[1],1,flip(outExpo),
			20,'zoomx',
		}
		rachael4=rachael4+1
	elseif v[2]==1 then
		if v.length then rachael3=v.length else rachael3=0.5 end
		ease{v[1]-rachael3/2,rachael3,inOutCirc,
			0,'tiny'
		}
		ease{v[1]-rachael3,rachael3,inQuad,
			200,'tiny'
		}
	elseif v[2]==3 then
		local inv = (rachael5%2)*2-1
		ease{v[1],2,flip(outExpo),
			50*inv,'noteskewx'
		}
		rachael5=rachael5+1
	end
end
for i=0,7 do
	ease{411+i*4-1,1,inExpo,
		7000,'arrowpathgirth',
		100,'arrowpath',
	}
	ease{411+i*4,4,flip(outExpo),
		50,'stealth',
		130,'zoomx',
	}
	ease{411+i*4,4,outExpo,
		0,'arrowpathgirth'
	}
	ease{411+i*4,4,outCirc,
		0,'arrowpath',
	}

	func{411+i*4,4,pop,0,0.2,function(a)
	ligma[2]:hidden(0)
	ligma[2]:zbuffer(0)
	ligma[2]:zoom(3)
	ligma[2]:xy(scx,sh*1.5)
	ligma[2]:diffuse(1,1,1,a*0.7)
end}
end
ease{405-2,4,inOutCirc,0,'tiny',0,'bumpyx',0,'bumpyz',0,'rotz',-360,'rotx',

	sw,'horizamt',
}
ease{405,4,outSine,0.03,'stripespeedy2',-0.01,'plusspeedy',-0.01,'plusspeedx'}

ease{405,4,outSine,
	30,'backingr',
	30,'backingg',
	30,'backingb',
}
ease{441,4,outSine,
	100,'stealth2',
}
ease{441-4,4,inQuart,
	50,'dark2',
	100,'stealth0',
	100,'stealth1',
	--100,'stealth2',
	100,'stealth3',

	100,'dark0',
	100,'dark1',
	--100,'stealth2',
	100,'dark3',
	--45,'rotz',
	---100,'movex',
}
ease{441-2,2,inCirc,
	50,'flip',
	50,'reverse',
	-300,'tiny2'
}
ease{441,8,outExpo,
	100,'tiny2',
	100,'dark2',
	rad(45),'confusionzoffset2',
}
ease{441-4,4,inSine,
	0,'backingr',
	0,'backingg',
	0,'backingb',
}
func{441-4,4,inQuart,0,1,function(a)
	ligma[1]:hidden(0)
	ligma[1]:zbuffer(0)
	ligma[1]:zoom(3*a*1.2)
	ligma[1]:xy(scx,sh*1.5)
	ligma[1]:diffuse(1,1,1,a*0.7)
end}
func{441,16,outQuart,1,0,function(a)
	ligma[1]:hidden(0)
	ligma[1]:zbuffer(0)
	ligma[1]:zoom(3*a)
	ligma[1]:xy(scx,sh*1.5)
	ligma[1]:diffuse(1,1,1,a*0.7)
end}
func{444,function(a)
	PP[1]:hidden(1)
	PP[2]:hidden(1)
end}

__={{424,0},{424.125,0},{424.188,0},{424.25,0},{424.333,0},{424.438,0}}

for i,v in ipairs(__) do
	ease{v[1],1,flip(outExpo),
		100,'arrowpath'..i%4,
		40,'squarez',
	}
end

card
	{0,65,  'snappy', 2, {70/255,190/255,187/255}}
	{65,116,  'ligmas appear', 2, {100/255,210/255,227/255}}
	{116,141,  'rotated bup', 8, {100/255,250/255,197/255}}
	{141,149,  'slight calm', 1, {90/255,120/255,227/255}}
	{149,181,  'inverted bup', 9, {100/255,197/255,250/255}}
	{181,213,  'psy gamgnam style', 5, {170/255,144/255,164/255}}
	{213,245,  'miku melts into the screen', 7, {170/255,170/255,170/255}}
	{245,273,  'floatinmg', 2, {20/255,120/255,255/255}}
	{273,309,  'pentagon road', 1, {230/255,120/255,255/255}}
	{309,337,  'quickly!!!', 3, {190/255,200/255,190/255}}
	{337,345,  'no se kai ni ', 1, {40/255,20/255,70/255}}
	{345,408,  'all together now!!', 8, {240/255,240/255,240/255}}
	{408,441,  'trap remix', 1, {40/255,40/255,40/255}}
	{441,442,  '                た', 1, {240/255,240/255,240/255}}

end)"
Type = "ActorFrame"
><children>
	<Layer Type = "Quad" Name = "backing"/>

	<Layer Type = "ActorFrame" Name = "zach"><children>
		<Layer Type = "ActorFrame" Name = "stripeframe"><children>
			<Layer File = "plus.png" Name = "plus"/>
			<Layer File = "stripeslight.png" Name = "stripe[1]"/>
			<Layer File = "stripes.png" Name = "stripe[2]"/>
		<Layer Type = "Sprite" InitCommand="%xero.sprite" Name="rsprite"/>
			<Layer Type = "Quad" Name = "cine[1]"/>
			<Layer Type = "Quad" Name = "cine[2]"/>
			
			<Layer Type = "Quad" Name = "cine[3]"/>
			<Layer Type = "Quad" Name = "cine[4]"/>
		</children></Layer>

		<Layer Type = "ActorFrame" Name = "pentaframe"><children>
			<Layer File = "pentagon.png" Name = "pentagon[1]"/>
			<Layer File = "pentagon.png" Name = "pentagon[2]"/>
			<Layer File = "pentagon.png" Name = "pentagon[3]"/>
			<Layer File = "pentagon.png" Name = "pentagon[4]"/>
			<Layer File = "pentagon.png" Name = "pentagon[5]"/>
			<Layer File = "pentagon.png" Name = "pentagon[6]"/>
			<Layer File = "pentagon.png" Name = "pentagon[7]"/>
			<Layer File = "pentagon.png" Name = "pentagon[8]"/>
			<Layer File = "pentagon.png" Name = "pentagon[9]"/>
			<Layer File = "pentagon.png" Name = "pentagon[10]"/>
			<Layer File = "pentagon.png" Name = "pentagon[11]"/>
			<Layer File = "pentagon.png" Name = "pentagon[12]"/>
			<Layer File = "pentagon.png" Name = "pentagon[13]"/>
			<Layer File = "pentagon.png" Name = "pentagon[14]"/>
			<Layer File = "pentagon.png" Name = "pentagon[15]"/>
			<Layer File = "pentagon.png" Name = "pentagon[16]"/>
			<Layer File = "pentagon.png" Name = "pentagon[17]"/>
			<Layer File = "pentagon.png" Name = "pentagon[18]"/>
			<Layer File = "pentagon.png" Name = "pentagon[19]"/>
			<Layer File = "pentagon.png" Name = "pentagon[20]"/>
			<Layer File = "pentagon.png" Name = "pentagon[21]"/>
			<Layer File = "pentagon.png" Name = "pentagon[22]"/>
			<Layer File = "pentagon.png" Name = "pentagon[23]"/>
			<Layer File = "pentagon.png" Name = "pentagon[24]"/>
			<Layer File = "pentagon.png" Name = "pentagon[25]"/>
			<Layer File = "pentagon.png" Name = "pentagon[26]"/>
			<Layer File = "pentagon.png" Name = "pentagon[27]"/>
			<Layer File = "pentagon.png" Name = "pentagon[28]"/>
			<Layer File = "pentagon.png" Name = "pentagon[29]"/>
			<Layer File = "pentagon.png" Name = "pentagon[30]"/>
			<Layer File = "pentagon.png" Name = "pentagon[31]"/>
			<Layer File = "pentagon.png" Name = "pentagon[32]"/>
			<Layer File = "pentagon.png" Name = "pentagon[33]"/>
			<Layer File = "pentagon.png" Name = "pentagon[34]"/>
			<Layer File = "pentagon.png" Name = "pentagon[35]"/>
			<Layer File = "pentagon.png" Name = "pentagon[36]"/>
			<Layer File = "pentagon.png" Name = "pentagon[37]"/>
			<Layer File = "pentagon.png" Name = "pentagon[38]"/>
			<Layer File = "pentagon.png" Name = "pentagon[39]"/>
			<Layer File = "pentagon.png" Name = "pentagon[40]"/>
		</children></Layer>
		<Layer Type = "ActorFrame" Name = "peee"><children>
			<Layer Type = "ActorProxy" Name = "PC[1]" />
			<Layer Type = "ActorProxy" Name = "PC[2]" />
			<Layer Type = "ActorProxy" Name = "PJ[1]" />
			<Layer Type = "ActorProxy" Name = "PJ[2]" />
			<Layer Type = "ActorProxy" Name = "PP[1]" />
			<Layer Type = "ActorProxy" Name = "PP[2]" />
		</children></Layer>
	</children></Layer>

	<!-- PARTICLES STUFF-->
	<Layer Type = "ActorFrame" Name = "particleframe"><children>
		
		<Layer Type = "Quad" Name = "particle[1]"/>
		<Layer Type = "Quad" Name = "particle[2]"/>
		<Layer Type = "Quad" Name = "particle[3]"/>
		<Layer Type = "Quad" Name = "particle[4]"/>
		<Layer Type = "Quad" Name = "particle[5]"/>
		<Layer Type = "Quad" Name = "particle[6]"/>
		<Layer Type = "Quad" Name = "particle[7]"/>
		<Layer Type = "Quad" Name = "particle[8]"/>
		<Layer Type = "Quad" Name = "particle[9]"/>
		<Layer Type = "Quad" Name = "particle[10]"/>
		<Layer Type = "Quad" Name = "particle[11]"/>
		<Layer Type = "Quad" Name = "particle[12]"/>
		<Layer Type = "Quad" Name = "particle[13]"/>
		<Layer Type = "Quad" Name = "particle[14]"/>
		<Layer Type = "Quad" Name = "particle[15]"/>
		<Layer Type = "Quad" Name = "particle[16]"/>
		<Layer Type = "Quad" Name = "particle[17]"/>
		<Layer Type = "Quad" Name = "particle[18]"/>
		<Layer Type = "Quad" Name = "particle[19]"/>
		<Layer Type = "Quad" Name = "particle[20]"/>
		<Layer Type = "Quad" Name = "particle[20]"/>
		<Layer Type = "Quad" Name = "particle[21]"/>
		<Layer Type = "Quad" Name = "particle[22]"/>
		<Layer Type = "Quad" Name = "particle[23]"/>
		<Layer Type = "Quad" Name = "particle[24]"/>
		<Layer Type = "Quad" Name = "particle[25]"/>
		<Layer Type = "Quad" Name = "particle[26]"/>
		<Layer Type = "Quad" Name = "particle[27]"/>
		<Layer Type = "Quad" Name = "particle[28]"/>
		<Layer Type = "Quad" Name = "particle[29]"/>
		<Layer Type = "Quad" Name = "particle[30]"/>
		<Layer Type = "Quad" Name = "particle[31]"/>
		<Layer Type = "Quad" Name = "particle[32]"/>
		<Layer Type = "Quad" Name = "particle[33]"/>
		<Layer Type = "Quad" Name = "particle[34]"/>
		<Layer Type = "Quad" Name = "particle[35]"/>
		<Layer Type = "Quad" Name = "particle[36]"/>
		<Layer Type = "Quad" Name = "particle[37]"/>
		<Layer Type = "Quad" Name = "particle[38]"/>
		<Layer Type = "Quad" Name = "particle[39]"/>
		<Layer Type = "Quad" Name = "particle[40]"/>
		<Layer Type = "Quad" Name = "particle[41]"/>
		<Layer Type = "Quad" Name = "particle[42]"/>
		<Layer Type = "Quad" Name = "particle[43]"/>
		<Layer Type = "Quad" Name = "particle[44]"/>
		<Layer Type = "Quad" Name = "particle[45]"/>
		<Layer Type = "Quad" Name = "particle[46]"/>
		<Layer Type = "Quad" Name = "particle[47]"/>
		<Layer Type = "Quad" Name = "particle[48]"/>
		<Layer Type = "Quad" Name = "particle[49]"/>
		<Layer Type = "Quad" Name = "particle[50]"/>

		<Layer File = "ligma.png" Name = "ligma[1]"/>
		<Layer File = "ligma.png" Name = "ligma[2]"/>
		<Layer File = "ligma.png" Name = "ligma[3]"/>
		<Layer File = "ligma.png" Name = "ligma[4]"/>

	</children></Layer>
<Layer Type = "ActorFrameTexture" InitCommand="%xero.aft" Name="coloraft" />
<Layer Type = "Sprite" Frag="shaders/color.frag" InitCommand="%xero.sprite" Name="colorsprite"/>

<Layer Type = "ActorFrameTexture" InitCommand="%xero.aft" Name="raft" />

</children></Mods>
